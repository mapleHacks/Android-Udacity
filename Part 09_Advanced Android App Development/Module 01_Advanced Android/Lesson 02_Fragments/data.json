{
  "data": {
    "lesson": {
      "id": 268643,
      "key": "79936377-aa69-45ae-a386-d865dcb36518",
      "title": "Fragments",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "In this lesson, you'll learn all about **fragments**, an essential building block to create apps with a flexible UI. You'll be getting hands-on experience with creating fragments by building an app called AndroidMe. AndroidMe lets a user customize the hair and clothing of an Android figure. After completing the app, you'll know how to build a beautiful and responsive UI for any app using fragments and the power of modularity and reusability!",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "http://d2uz2655q5g6b2.cloudfront.net/79936377-aa69-45ae-a386-d865dcb36518/268643/1516747998539/Fragments%20Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "http://d2uz2655q5g6b2.cloudfront.net/79936377-aa69-45ae-a386-d865dcb36518/268643/1516747955942/Fragments%20Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 279211,
          "key": "cfef9808-ca3a-44d2-995a-e2553f5abc94",
          "title": "Introduction to Fragments",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "cfef9808-ca3a-44d2-995a-e2553f5abc94",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282701,
              "key": "eaed1134-0f83-4caf-b6e7-dea36a20bbe9",
              "title": "Introduction to Fragments",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "KECSjLiTu78",
                "china_cdn_id": "KECSjLiTu78.mp4"
              }
            }
          ]
        },
        {
          "id": 279213,
          "key": "a2047c96-af15-4e98-ab8f-82c7705464e5",
          "title": "Responsive Design",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a2047c96-af15-4e98-ab8f-82c7705464e5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 283724,
              "key": "a32ab24a-896f-4613-9e91-2e10831009e9",
              "title": "Responsive Design",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "5kmlkW4aO4c",
                "china_cdn_id": "5kmlkW4aO4c.mp4"
              }
            },
            {
              "id": 298400,
              "key": "a538456a-7fee-45e6-a6d4-973789c47b4d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Read more about [Implementing Descendent Navigation](https://developer.android.com/training/implementing-navigation/descendant.html).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 279214,
          "key": "3e401af5-517f-499f-9d69-87107a2bad20",
          "title": "Why Use Fragments?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3e401af5-517f-499f-9d69-87107a2bad20",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 283700,
              "key": "77ba5bee-191b-4324-9340-407375343a3d",
              "title": "Why Use Fragments?",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "vvKB3_BQn2g",
                "china_cdn_id": "vvKB3_BQn2g.mp4"
              }
            },
            {
              "id": 298399,
              "key": "8b39d5b2-ab52-4454-8dec-242fb1f8d9aa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "It's important to note that a [Fragment](https://developer.android.com/guide/components/fragments.html) must always be embedded in an activity and the fragment's lifecycle is directly affected by the host activity's lifecycle. For example, when the activity is paused, so are all fragments in it, and when the activity is destroyed, so are all fragments.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 279253,
          "key": "05bff044-e412-4297-8140-12171dd21cae",
          "title": "Advantages of Fragments",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "05bff044-e412-4297-8140-12171dd21cae",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279254,
              "key": "af67a51a-6739-4b15-8dcb-977ce8641cea",
              "title": "Advantages of Using Fragments",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "af67a51a-6739-4b15-8dcb-977ce8641cea",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Please check all of the traits that make fragments useful.",
                "answers": [
                  {
                    "id": "a1489182751845",
                    "text": "They are reusable",
                    "is_correct": true
                  },
                  {
                    "id": "a1489182798715",
                    "text": "Fragments have the same lifecycle as their host activity",
                    "is_correct": false
                  },
                  {
                    "id": "a1489182806684",
                    "text": "They can be used to build a flexible UI",
                    "is_correct": true
                  },
                  {
                    "id": "a1489182815073",
                    "text": "You can dynamically add or remove them during runtime",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 279215,
          "key": "1f7a9b74-eb88-4385-9adc-aecb26bcbbaf",
          "title": "Fragment Lifecycle",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1f7a9b74-eb88-4385-9adc-aecb26bcbbaf",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282703,
              "key": "15af75bf-1407-4d82-81ec-286acfd038f3",
              "title": "Fragment Lifecycle",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "uvloJibNKsQ",
                "china_cdn_id": "uvloJibNKsQ.mp4"
              }
            }
          ]
        },
        {
          "id": 279256,
          "key": "68125fbd-ec4e-4650-9934-03935c5c415e",
          "title": "Lifecycle Callbacks",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "68125fbd-ec4e-4650-9934-03935c5c415e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279257,
              "key": "cb18059d-bb5e-44e2-b39a-d7e6e749a0aa",
              "title": "Fragment Lifecycle Callbacks",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "cb18059d-bb5e-44e2-b39a-d7e6e749a0aa",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "For a single fragment in an activity, what lifecycle callback is called right after itâ€™s host activity is created?",
                "answers": [
                  {
                    "id": "a1489183245131",
                    "text": "onDestroy",
                    "is_correct": false
                  },
                  {
                    "id": "a1489183278465",
                    "text": "onCreateView",
                    "is_correct": true
                  },
                  {
                    "id": "a1489183287077",
                    "text": "onResume",
                    "is_correct": false
                  },
                  {
                    "id": "a1489183300108",
                    "text": "onSaveInstanceState",
                    "is_correct": false
                  },
                  {
                    "id": "a1489183308632",
                    "text": "onCreate",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 279216,
          "key": "c2bcb059-e1bd-425a-898a-019b9f38a144",
          "title": "Starting Code",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c2bcb059-e1bd-425a-898a-019b9f38a144",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 297357,
              "key": "6dc1c840-44f6-4883-a50c-453674dbcafd",
              "title": "Starting Code",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "CFYfd7C93G4",
                "china_cdn_id": "CFYfd7C93G4.mp4"
              }
            },
            {
              "id": 279315,
              "key": "e419d118-ad35-4c8a-bee0-8530bcdf733a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Download the AndroidMe Starter Code\n\nThe code for this app can be found in the [AndroidMe repository](https://github.com/udacity/Android_Me). Download this repository using the command:\n\n```bash\ngit clone https://github.com/udacity/Android_Me.git\n```\n\nIf you need to a refresher on how the code is organized, please refer to the [concept where we introduced how to work with the course code](https://classroom.udacity.com/courses/ud857/lessons/8b2a9d63-0ff5-48ff-90d3-a9855b701dae/concepts/41b82e3c-2797-46e5-8a66-684098ca8cbb).\n\n### Exercise Code\n**Exercise:** [TFragments.00-StartingCode](https://github.com/udacity/Android_Me/tree/TFragments.00-StartingCode)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 279217,
          "key": "e07ab40c-9248-43f8-b78a-c4835aa8aa37",
          "title": "Create a Fragment",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e07ab40c-9248-43f8-b78a-c4835aa8aa37",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282975,
              "key": "c6c6b587-9b60-4406-9326-9d64ba05723c",
              "title": "Create a Fragment ",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "g2xvPm8y5PQ",
                "china_cdn_id": "g2xvPm8y5PQ.mp4"
              }
            },
            {
              "id": 298488,
              "key": "0f359a8b-1671-4fb6-8a4f-96c00a5fdba4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Fragment Naming Convention\n\nThe class name should be in CamelCase. Ex: `SignInFragment`\n\nThe corresponding XML file should follow this naming convention `fragment_<FRAGMENT_NAME>.xml`\n\nEx:  `fragment_sign_in.xml`\n\nFor a full list of Android naming conventions, checkout [ribot's Android Guidelines](https://github.com/ribot/android-guidelines/blob/master/project_and_code_guidelines.md).\n\n### Choosing Fragment Support Library\n\nOur Fragment class use  the *v4 [Support Library](https://developer.android.com/topic/libraries/support-library/packages.html)*. The v4 libraries are designed to be used with Android 2.3 (API level 9) and higher. They include the largest set of APIs compared to the other libraries, including support for application components, user interface features, accessibility, data handling, network connectivity, and programming utilities.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 279263,
          "key": "88fefef7-4404-440b-8ff5-14a2713b975e",
          "title": "Steps to Create a Fragment",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "88fefef7-4404-440b-8ff5-14a2713b975e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279270,
              "key": "9b0eb44a-bbe5-404f-a602-356e9b7a441d",
              "title": "Ordered steps to create a fragment",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9b0eb44a-bbe5-404f-a602-356e9b7a441d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match the tasks you need to complete in order to dynamically display a fragment with the order that they should be executed in. \n\nFor example, to start a new activity: 1) Create a new Intent that points to the new activity, 2) Add any information you want to that Intent, 3) Start the intent (in this order).\n"
                },
                "concepts_label": "Task description",
                "answers_label": "Step number",
                "concepts": [
                  {
                    "text": "Create a new fragment class that inflates a layout",
                    "correct_answer": {
                      "id": "a1489183712109",
                      "text": "2"
                    }
                  },
                  {
                    "text": "Create a layout that defines the appearance of the fragment",
                    "correct_answer": {
                      "id": "a1489183959601",
                      "text": "1"
                    }
                  },
                  {
                    "text": "Add the fragment to it's host activity using the FragmentManager and a fragment transaction",
                    "correct_answer": {
                      "id": "a1489184014139",
                      "text": "4"
                    }
                  },
                  {
                    "text": "Create a new fragment instance in a host activity",
                    "correct_answer": {
                      "id": "a1489184039697",
                      "text": "3"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1489184014139",
                    "text": "4"
                  },
                  {
                    "id": "a1489183959601",
                    "text": "1"
                  },
                  {
                    "id": "a1489183712109",
                    "text": "2"
                  },
                  {
                    "id": "a1489184039697",
                    "text": "3"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 279322,
          "key": "af805185-cfc8-49da-bf97-c8d60c194fe5",
          "title": "Exercise: Create BodyPartFragment",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "af805185-cfc8-49da-bf97-c8d60c194fe5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279323,
              "key": "8daf12ae-b1e0-4789-8f65-9813fb0d10e2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Create and Display a BodyPartFragment\n\nIn this exercise, you'll be doing three things. First, creating a new fragment layout that displays an image, second, creating a new Fragment class to display that layout, and third, instantiating and displaying a fragment in an Activity!\n\nDownload the exercise code and follow along with the listed TODO's to complete the exercise!\n\n### Exercise Code\n**Exercise:** [TFragments.01-Exercise-CreateBodyPartFragment](https://github.com/udacity/Android_Me/tree/TFragments.01-Exercise-CreateBodyPartFragment/app)",
              "instructor_notes": ""
            },
            {
              "id": 279324,
              "key": "baf17289-5116-4ce0-b10a-b2ad371a56dd",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "baf17289-5116-4ce0-b10a-b2ad371a56dd",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create a layout file that displays one body part image named fragment_body_part.xml",
                "Create a new class called BodyPartFragment to display an image of an Android-Me body part",
                "In the new class, display the first image in the list of head images",
                "In the activity_android_me layout file, create a container to hold the head BodyPartFragment",
                "Create a new BodyPartFragment instance and display it using the FragmentManager"
              ],
              "positive_feedback": "Great job! This is a strong start; let's keep going!!\n\n**Solution:** [[TFragments.01-Solution-CreateBodyPartFragment](https://github.com/udacity/Android_Me/tree/TFragments.01-Solution-CreateBodyPartFragment/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.01-Exercise-CreateBodyPartFragment...TFragments.01-Solution-CreateBodyPartFragment)]",
              "video_feedback": null,
              "description": "Follow the steps to complete this coding exercise."
            }
          ]
        },
        {
          "id": 279218,
          "key": "5af22bff-9bb3-457a-8d00-2e5a769ac575",
          "title": "FragmentManager and Transactions",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5af22bff-9bb3-457a-8d00-2e5a769ac575",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 283696,
              "key": "40f496b4-70a1-4e1b-9bad-c8ce368d5343",
              "title": "Fragment Manager and Transactions",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "T6_mGn4oK0M",
                "china_cdn_id": "T6_mGn4oK0M.mp4"
              }
            }
          ]
        },
        {
          "id": 279219,
          "key": "32e598d2-94a0-4e9f-8e86-666875720477",
          "title": "More Fragments and Storing Variables",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "32e598d2-94a0-4e9f-8e86-666875720477",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282945,
              "key": "349582bf-859e-45fd-9451-5511004b6ac5",
              "title": "More Fragments and Storing Variables",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "NpzC9UhCMik",
                "china_cdn_id": "NpzC9UhCMik.mp4"
              }
            }
          ]
        },
        {
          "id": 279326,
          "key": "aa8f96d4-191e-44d2-9fd7-15f42768c2f2",
          "title": "Exercise: Display Three Fragments",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "aa8f96d4-191e-44d2-9fd7-15f42768c2f2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279327,
              "key": "d6bc6d75-2b65-4387-8303-060f238615e1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Display All Three BodyPartFragments\n\nIn this exercise, you'll build on top of what you already know to add the rest of the BodyPartFragments to the screen! You'll also learn how to dynamically set fragment resources\n\n### Exercise Code\n**Exercise:** [TFragments.02-Exercise-DisplayThreeFragments](https://github.com/udacity/Android_Me/tree/TFragments.02-Exercise-DisplayThreeFragments/app)\n\n## Setting image resources\n\nThe tricky part of this exercise is learning to dynamically set fragment resources. This will mainly be done by 1) adding internal class variables that keep track of resources in the fragment class and 2) providing \"setter\" methods that allow you to give those class variables a certain value.",
              "instructor_notes": ""
            },
            {
              "id": 279329,
              "key": "ca3fc68c-1476-4df9-bb7c-fe3e081f43b3",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ca3fc68c-1476-4df9-bb7c-fe3e081f43b3",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "For the BodyPartFragment, create a setter method and class variable (mImageIds) to set and store of a list of image resources",
                "Create another setter method and variable (mListIndex) to track and set the index of the list item to display",
                "If a list of image id's exists, set the image resource to the correct item in that list",
                "Create and display the body and leg BodyPartFragments"
              ],
              "positive_feedback": "Excellent work!\n\n**Solution:** [[TFragments.02-Solution-DisplayThreeFragments](https://github.com/udacity/Android_Me/tree/TFragments.02-Solution-DisplayThreeFragments/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.02-Exercise-DisplayThreeFragments...TFragments.02-Solution-DisplayThreeFragments)]",
              "video_feedback": null,
              "description": "Okay, now it's your turn. Follow the steps to complete this coding exercise."
            }
          ]
        },
        {
          "id": 279278,
          "key": "613159c2-d3e7-4f3a-bbba-8d93414637a9",
          "title": "Practice Replacing a Fragment",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "613159c2-d3e7-4f3a-bbba-8d93414637a9",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279282,
              "key": "4a2acf49-bd86-4352-8581-26f1c2c706b8",
              "title": "Replace a fragment",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4a2acf49-bd86-4352-8581-26f1c2c706b8",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Given the following starting code:\n\n\n```java\n\nFragmentManager fm = getSupportFragmentManager();\nFragment frag = new BodyPartFragment();\nint containerID = R.id.fragment_container;\nFragmentTransaction ft = fm.beginTransaction();\n\n```\n\nComplete the transaction code to replace the fragment container with a new BodyPartFragment.",
                "answers": [
                  {
                    "id": "a1489184461983",
                    "text": "ft.replace(containerID, frag);",
                    "is_correct": false
                  },
                  {
                    "id": "a1489184503002",
                    "text": "ft.add(containerID, frag). commit();",
                    "is_correct": false
                  },
                  {
                    "id": "a1489184521128",
                    "text": "ft.replace(containerID, null). commit();",
                    "is_correct": false
                  },
                  {
                    "id": "a1489184525797",
                    "text": "ft.replace(containerID, frag). commit();",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 279220,
          "key": "b70f337f-216e-4c81-bec4-62f53756cfb0",
          "title": "Responding to Clicks",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b70f337f-216e-4c81-bec4-62f53756cfb0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282976,
              "key": "b2ce2c25-e29c-470a-bb21-6711e707994b",
              "title": "Responding to Clicks",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "eOlNJTyxKqE",
                "china_cdn_id": "eOlNJTyxKqE.mp4"
              }
            }
          ]
        },
        {
          "id": 279330,
          "key": "41c6adc0-139c-4d29-8954-2e61884d3494",
          "title": "Exercise: Click Response and Saving State",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "41c6adc0-139c-4d29-8954-2e61884d3494",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279331,
              "key": "c80ff81d-e973-4c1b-9490-dd40deea394d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Adding a ClickListener and Saving State\n\nIn this exercise, you'll be doing two things. First, creating a click listener inside the BodyPartFragment class that will update the image resource on a click! Second, you'll be adding some simple code to save the current state of the fragment -- this is so that the image that is being displayed is saved and will *still* be displayed when an activity restarts, such as on an orientation change.\n\n### Exercise Code\n**Exercise:** [TFragments.03-Exercise-ClicksAndSavingState](https://github.com/udacity/Android_Me/tree/TFragments.03-Exercise-ClicksAndSavingState/app)\n\n## Saving state\n\nTo save the state of a fragment, you'll need to override the onSaveInstanceState method as well as check if there *is* a saved state, in the host activity, before creating new fragment instances.",
              "instructor_notes": ""
            },
            {
              "id": 279332,
              "key": "8f38a99d-0cb0-4fad-abd1-4b6434435d59",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8f38a99d-0cb0-4fad-abd1-4b6434435d59",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "In the BodyPartFragment class, set a click listener on the image view and on a click increment the list index and set the image resource",
                "If you reach the end of a list of images, set the list index back to 0 (the first item in the list)",
                "Create final Strings to store state information about the list of images and list index",
                "Override onSaveInstanceState and save the current state of the fragment",
                "In the host activity, only create new fragments when there is no previously saved state"
              ],
              "positive_feedback": "Excellent work!\n\n**Solution:** [[TFragments.03-Solution-ClicksAndSavingState](https://github.com/udacity/Android_Me/tree/TFragments.03-Solution-ClicksAndSavingState/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.03-Exercise-ClicksAndSavingState...TFragments.03-Solution-ClicksAndSavingState)]",
              "video_feedback": null,
              "description": "Follow along with the list of tasks to complete the exercise."
            }
          ]
        },
        {
          "id": 279221,
          "key": "11adc783-daec-412a-a619-9558f4bd61e8",
          "title": "Master List Fragment",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "11adc783-daec-412a-a619-9558f4bd61e8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282799,
              "key": "76ec31a7-dc66-4a26-b289-edc54ff1aa6d",
              "title": "Master List Fragment",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "wxmjTIae0lM",
                "china_cdn_id": "wxmjTIae0lM.mp4"
              }
            }
          ]
        },
        {
          "id": 279333,
          "key": "e4d6dffa-89ca-43d3-9bd0-47dde7fa6761",
          "title": "Exercise: Create MasterListFragment",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e4d6dffa-89ca-43d3-9bd0-47dde7fa6761",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279334,
              "key": "6924e6d8-76d3-487e-a259-58a7090d69fc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Create and Display the Master List Fragment\n\nIn this exercise, you'll be creating the MasterListFragment. This will be similar to how you created the BodyPartFragment class, only you'll be using the provided adapter to display a grid-list of *all* images.\n\n### Exercise Code\n**Exercise:** [TFragments.04-Exercise-CreateMasterListFragment](https://github.com/udacity/Android_Me/tree/TFragments.04-Exercise-CreateMasterListFragment/app)\n\nHint: You'll also need to create a new host activity to display this fragment and set it to launch by changing parameters in the *AndroidManifest* file.",
              "instructor_notes": ""
            },
            {
              "id": 279335,
              "key": "61ed2309-6dbe-4e45-afae-657661fc1d92",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "61ed2309-6dbe-4e45-afae-657661fc1d92",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create a fragment_master_list.xml layout file to display all our images; this should be a GridView",
                "Create a new class called MasterListFragment which will display the GridView list of ALL AndroidMe images",
                "In the MasterListFragment class, create a new MasterListAdapter and set it on the GridView",
                "Create a new Activity named MainActivity and a corresponding layout file that displays a MasterListFragment",
                "Declare the MainActivity in the manifest and set it to launch upon opening this app"
              ],
              "positive_feedback": "Excellent work!\n\n**Solution:** [[TFragments.04-Solution-CreateMasterListFragment](https://github.com/udacity/Android_Me/tree/TFragments.04-Solution-CreateMasterListFragment/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.04-Exercise-CreateMasterListFragment...TFragments.04-Solution-CreateMasterListFragment)]",
              "video_feedback": null,
              "description": "Follow along with these tasks to complete this exercise and create the final fragment class!"
            }
          ]
        },
        {
          "id": 279222,
          "key": "49a9c01b-e81a-4102-9ba8-c4055c31e22d",
          "title": "Communicating Between Fragments ",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "49a9c01b-e81a-4102-9ba8-c4055c31e22d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 283726,
              "key": "8a2256fd-451b-4d66-be18-25436a06d3b2",
              "title": "Communicating Between Fragments",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1FI51h4XBIE",
                "china_cdn_id": "1FI51h4XBIE.mp4"
              }
            }
          ]
        },
        {
          "id": 279224,
          "key": "5759d392-f965-4270-b6f7-3d92f4f7fa47",
          "title": "Define an Interface",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5759d392-f965-4270-b6f7-3d92f4f7fa47",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282958,
              "key": "0ee9a583-6267-476d-a990-cb7bcf94c380",
              "title": "Define An Interface",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "h_CLPqaWhEg",
                "china_cdn_id": "h_CLPqaWhEg.mp4"
              }
            }
          ]
        },
        {
          "id": 279336,
          "key": "a814286a-4223-4bb8-9a61-881299668275",
          "title": "Exercise: Interface Communication",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a814286a-4223-4bb8-9a61-881299668275",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279337,
              "key": "c5c1c46b-e439-46dc-ae8b-bfbce0614d28",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Define an Interface\n\nIn this exercise, you'll be defining an interface in the MasterListFragment class, and have it \"callback\" or communicate up to it's host activity.\n\n### Exercise Code\n**Exercise:** [TFragments.05-Exercise-InterfaceCommunication](https://github.com/udacity/Android_Me/tree/TFragments.05-Exercise-InterfaceCommunication/app)\n\n## Why interfaces?\n\nTo keep fragments modular and reusable, you cannot have them communicate directly with one another or directly tied to a host activity. An interface gives you a way to communicate but also stay modular because it can be implemented by *any* host activity -- this way the fragment is not tied directly to an activity.",
              "instructor_notes": ""
            },
            {
              "id": 279340,
              "key": "ca53bdbd-75fb-4c07-8248-6beee25aff15",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ca53bdbd-75fb-4c07-8248-6beee25aff15",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "In the MasterListFragment class, define a new interface OnImageClickListener that triggers a callback in the host activity",
                "Override onAttach to make sure that the container activity has implemented the callback",
                "Set a click listener on the gridView and trigger the callback onImageSelected when an item is clicked",
                "In MainActivity, implement the MasterListFragment callback: OnImageClickListener",
                "Define the behavior for the onImageSelected callback method and create a Toast that displays the position clicked"
              ],
              "positive_feedback": "Excellent work!\n\n**Solution:** [[TFragments.05-Solution-InterfaceCommunication](https://github.com/udacity/Android_Me/tree/TFragments.05-Solution-InterfaceCommunication/app)]\n\n[[Diff](https://github.com/udacity/Android_Me/compare/TFragments.05-Exercise-InterfaceCommunication...TFragments.05-Solution-InterfaceCommunication)]",
              "video_feedback": null,
              "description": "Follow along with these tasks to implement fragment-to-activity communication."
            }
          ]
        },
        {
          "id": 279225,
          "key": "fe9ed686-be58-4277-b494-4b9d6c41a6e2",
          "title": "Communicate Between Activities",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "fe9ed686-be58-4277-b494-4b9d6c41a6e2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282963,
              "key": "5997fe03-6419-45f4-a862-594657745420",
              "title": "Communicate Between Activities",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "r69SVwRtQ1E",
                "china_cdn_id": "r69SVwRtQ1E.mp4"
              }
            }
          ]
        },
        {
          "id": 279341,
          "key": "154d3714-c4ba-4389-8c10-584baac47804",
          "title": "Exercise: Communicate Between Activities",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "154d3714-c4ba-4389-8c10-584baac47804",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279342,
              "key": "023dd537-c06f-4c3e-afa4-7643ba530cb2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Communicate Between Activities\n\nIn this exercise, you'll be completing the phone app by implementing communication between the master list and android-me activities. Both activities will be able to respond to user input!\n\n### Exercise Code\n**Exercise:** [TFragments.06-Exercise-CommunicateBetweenActivities](https://github.com/udacity/Android_Me/tree/TFragments.06-Exercise-CommunicateBetweenActivities/app)",
              "instructor_notes": ""
            },
            {
              "id": 279348,
              "key": "62a71ec5-2b58-481a-9ebd-8ab2e21365ce",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "62a71ec5-2b58-481a-9ebd-8ab2e21365ce",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Turn the master list layout into a LinearLayout and add a \"Next\" button at the bottom of the gridview",
                "In MainActivity, based on where a user has clicked, store the selected list index for the head, body, and leg BodyPartFragments",
                "Put the selected-image information in a Bundle and attach it to an Intent that will launch an AndroidMeActivity",
                "Get a reference to the \"Next\" button and launch the intent when this button is clicked",
                "In AndroidMeActivity, retrieve the bundled list index values that were sent through the intent and use them to display the desired Android-Me body part image"
              ],
              "positive_feedback": "Excellent work!\n\n**Solution:** [[TFragments.06-Solution-CommunicateBetweenActivities](https://github.com/udacity/Android_Me/tree/TFragments.06-Solution-CommunicateBetweenActivities/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.06-Exercise-CommunicateBetweenActivities...TFragments.06-Solution-CommunicateBetweenActivities)]",
              "video_feedback": null,
              "description": "Now it's your turn! Follow along with these steps to finish this exercise."
            }
          ]
        },
        {
          "id": 279226,
          "key": "c2fa39f7-e4ed-4340-97dc-351dc7b84fbe",
          "title": "Exercise: Two Pane Layout",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c2fa39f7-e4ed-4340-97dc-351dc7b84fbe",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 279355,
              "key": "9e34ee03-421b-48e3-b8f4-bacd41b79d09",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Title of Task\n\nIn this final exercise, you'll be creating a two pane layout for viewing on a tablet. This will require creating a new layout folder for tablets and truly utilizing the flexible, reusable, and modular power of fragments!\n\n### Exercise Code\n**Exercise:** [TFragments.07-Exercise-TwoPaneUI](https://github.com/udacity/Android_Me/tree/TFragments.07-Exercise-TwoPaneUI/app)\n\n## Responsive Design\n\nThis two pane layout completes our Master-Detail flow that we talked about at the beginning of this lesson. This is an extremely common (and responsive) design pattern, and the last step in completing this app! :)\n\nIf you decide to implement a divider in the UI, checkout [this suggestion](http://stackoverflow.com/a/14533085). \n",
              "instructor_notes": ""
            },
            {
              "id": 282977,
              "key": "5986a9c3-3946-48a5-b67d-497da2decced",
              "title": "Two Pane Layout",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "9OK-H8N2v2U",
                "china_cdn_id": "9OK-H8N2v2U.mp4"
              }
            },
            {
              "id": 279359,
              "key": "53e3cce2-a739-4ccf-93a9-e33c6cb97b70",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "53e3cce2-a739-4ccf-93a9-e33c6cb97b70",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "In a new folder, create a new two-pane activity_main layout for tablets (sw600dp) that will override the default layout resource",
                "Build the layout to display the MasterListFragment and all BodyPartFragments side-by-side",
                "In MainActivity, create a variable to track whether to display a two-pane or single-pane UI",
                "If you are making a two-pane display, add new BodyPartFragments to create an initial Android-Me image",
                "In the onImageSelected callback, handle the two-pane case and replace existing fragments right when a new image is selected from the master list"
              ],
              "positive_feedback": "Wooo!! Great job!! You've completed this app!\n\n**Solution:** [[TFragments.07-Solution-TwoPaneUI](https://github.com/udacity/Android_Me/tree/TFragments.07-Solution-TwoPaneUI/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.07-Exercise-TwoPaneUI...TFragments.07-Solution-TwoPaneUI)]",
              "video_feedback": null,
              "description": "Follow along with these steps to create a UI that looks great on tablet screens!"
            }
          ]
        },
        {
          "id": 279227,
          "key": "b8bc063f-a8a6-40a5-8067-37c8b1d72746",
          "title": "Fragments Outro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b8bc063f-a8a6-40a5-8067-37c8b1d72746",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282797,
              "key": "360801be-ebf7-4637-9239-f4358e866969",
              "title": "Fragments Outro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "OSQoTG2NgSQ",
                "china_cdn_id": "OSQoTG2NgSQ.mp4"
              }
            }
          ]
        }
      ]
    }
  }
}