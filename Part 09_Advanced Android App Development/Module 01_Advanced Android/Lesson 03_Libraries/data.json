{
  "data": {
    "lesson": {
      "id": 268644,
      "key": "240ea66a-cf72-48bf-8df8-d5ff353a6d47",
      "title": "Libraries",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "In this lesson, you'll learn about including external libraries in your application. Libraries will allow you to unlock powerful features with just a few lines of code, as you'll see when you build an app that converts a facial expression in a picture into the closest matching Emoji using the Google Mobile Vision library. By the end of the lesson, you'll know how to find a select a library that suits your needs, as well as the names of a few \"must have\" Android Libraries.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "http://d2uz2655q5g6b2.cloudfront.net/240ea66a-cf72-48bf-8df8-d5ff353a6d47/268644/1516748751051/Libraries%20Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "http://d2uz2655q5g6b2.cloudfront.net/240ea66a-cf72-48bf-8df8-d5ff353a6d47/268644/1516748718498/Libraries%20Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 286108,
          "key": "25fb050c-b522-4083-bb91-6ae4566b069c",
          "title": "Introduction to Libraries",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "25fb050c-b522-4083-bb91-6ae4566b069c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 292353,
              "key": "2d5cdefb-4ca0-4550-8a60-e9916dad59a8",
              "title": "Introduction to Libraries",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "RjfWy97dpuI",
                "china_cdn_id": "RjfWy97dpuI.mp4"
              }
            }
          ]
        },
        {
          "id": 293774,
          "key": "1287e3dc-4c9b-49eb-841f-2fca32996ca8",
          "title": "A Library You've Already Used ",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1287e3dc-4c9b-49eb-841f-2fca32996ca8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 298555,
              "key": "1bc50f4a-593e-4fc6-9f35-361a6ad40ad0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# A Library You've Already Used \n\nThe first library you've been using is the <a href=\"https://developer.android.com/topic/libraries/support-library/index.html\" target=\"_blank\">Support Library</a>, which provides backwards compatibility for newer features of Android. Additionally, it provides convenience classes and features not available in the standard Framework API for easier development and support across more devices. \n\nOne example of the Support Library in action is the use of Runtime Permissions. The old permissions model requested the desired permission when the app was installed. Starting with API level 23, however, the permissions are requested as they are needed. This approach streamlines the app install process, since the user does not need to grant permissions when they install or update the app. It also gives the user more control over the app's functionality; for example, a user could choose to give a the Google+ app access to the contacts but not to the device location or camera. \n\nThe Support Library includes methods for checking for existing permissions, and requesting new permissions in a backwards compatible way: It will only affect devices running API level 23 or higher, so you don't have to do any API level checks yourself.\n\nThe Support Library is very large, so including the entire library when all you want is compatible support for runtime permissions is almost certainly overkill. This is why the Support Library is fragmented into many different packages based on functionality, so you can include only the features that your application requires (remember how you included only the `RecyclerView` statement from the Support Library earlier). \n\nFor a complete list of packages and their uses, check out the  <a href=\"https://developer.android.com/topic/libraries/support-library/index.html\" target=\"_blank\">Support Library docs</a>.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 293775,
          "key": "131b44af-3427-483c-99e3-bf4dfc7b590b",
          "title": "When to Use Libraries",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "131b44af-3427-483c-99e3-bf4dfc7b590b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 298933,
              "key": "9fe35e51-4356-4095-9d64-33b3fbb5d7b8",
              "title": "When to Use Libraries",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "lCMxlcFr_tw",
                "china_cdn_id": "lCMxlcFr_tw.mp4"
              }
            }
          ]
        },
        {
          "id": 282807,
          "key": "210bc127-87a3-4b63-8755-d9443b2dc4c3",
          "title": "Quiz: When to Use Libraries",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "210bc127-87a3-4b63-8755-d9443b2dc4c3",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 293777,
              "key": "29804cd1-e168-47f9-b161-62cd4bc3cee0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# When to Use Libraries",
              "instructor_notes": ""
            },
            {
              "id": 282946,
              "key": "3d66504d-4324-4d44-ab30-8ba08c763b74",
              "title": "When to Use Libaries",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3d66504d-4324-4d44-ab30-8ba08c763b74",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of these problems might be solved with the use of a library?",
                "answers": [
                  {
                    "id": "a1489685005407",
                    "text": "Simplifying the creation of a content provider",
                    "is_correct": true
                  },
                  {
                    "id": "a1489685044172",
                    "text": "Loading and managing images over the network",
                    "is_correct": true
                  },
                  {
                    "id": "a1489685068192",
                    "text": "Adding barcode scanning functionality ",
                    "is_correct": true
                  },
                  {
                    "id": "a1489685071462",
                    "text": "Different logging for debug and release version of the app",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 286174,
          "key": "fa1db230-50ce-446c-9221-1a01e7462459",
          "title": "Find Library Intro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "fa1db230-50ce-446c-9221-1a01e7462459",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286189,
              "key": "2890887a-62ed-4867-ba8a-010b9546862f",
              "title": "Find Library Intro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "JJi_ZliEIf4",
                "china_cdn_id": "JJi_ZliEIf4.mp4"
              }
            }
          ]
        },
        {
          "id": 282947,
          "key": "8f8913c5-3d66-4d15-a0a1-843c838cbdc0",
          "title": "How to Find a Library",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "8f8913c5-3d66-4d15-a0a1-843c838cbdc0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282950,
              "key": "03c93220-d722-44f1-a9d8-50b02795e46d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Finding Libraries\nFinding a library that fits your needs starts where all the rest of your questions have been answered so far: that's right, [stackoverflow](http://stackoverflow.com/). \n\nLibraries are useful for solving problems that appear over and over again in different applications. If you search Stack Overflow, often the accepted solution to the problem you are trying to solve will be a third party library that does exactly what you're looking for.\n\nI'd also like to mention two more resources for finding libraries: \nThe first one is [Android Arsenal](https://android-arsenal.com/), which is a large library of libraries (aha) that just about anyone can add to. There are literally thousands of libraries on here, of highly varied quality. \nThe second resource is this [Github](https://github.com/codepath/android_guides/wiki/Must-Have-libraries) page, which lists some of the most commonly used android libraries. \n\n# But Wait!\nA word of caution: just because there is a library that seems like a perfect fit for your need, do not be too hasty in adding it to your application. Using a library that is not well maintained or documented comes with a host of other issues and is likely to cause more of a headache than it cures. The next video will be devoted to figuring out whether a library is a good candidate for your application.\n\n### 64K Method Limit\nAnother consideration in deciding whether or not to use a library is to be aware of how it will affect the size of your app. When your app, including the libraries it uses, reaches a certain size, you encounter build errors that indicate your app has reached a limit of the Android app build architecture ([64K Method Limit](https://developer.android.com/studio/build/multidex.html)). Libraries are commonly used and without a doubt efficient, but do be aware of theses considerations. ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 286175,
          "key": "13410858-0e12-4027-b406-da30706c9a29",
          "title": "Choose a Library",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "13410858-0e12-4027-b406-da30706c9a29",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286190,
              "key": "1a587553-2b12-4bda-b4de-35678d6d750a",
              "title": "Choose a Library",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "hut5flkLZj8",
                "china_cdn_id": "hut5flkLZj8.mp4"
              }
            },
            {
              "id": 289111,
              "key": "9d5bf91b-d6ed-4d40-8ca6-2cb365c4e38d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Instructor Notes\nFor more information on licenses and which licenses to use, check out this [link](https://choosealicense.com/)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 286176,
          "key": "f0c5803c-36fb-4422-83ae-7c3b75f5869c",
          "title": "Explore a Library",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f0c5803c-36fb-4422-83ae-7c3b75f5869c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286191,
              "key": "7c46cf13-ba0c-46d6-8850-e04fe0087513",
              "title": "Explore a Library",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rSvwImNOscU",
                "china_cdn_id": "rSvwImNOscU.mp4"
              }
            }
          ]
        },
        {
          "id": 282952,
          "key": "07f2f37a-0d1c-4d58-b1ae-904822c5f26a",
          "title": "Quiz: Exploring a Library",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "07f2f37a-0d1c-4d58-b1ae-904822c5f26a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282954,
              "key": "eb715713-73d8-490d-ac39-a57856d2dc0c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Exploring a Library\nIt's a good idea to familiarize yourself with the Library before you start implementing it. Check out the documentation to figure which of the classes below are involved in using Classification to detect faces in a bitmap.",
              "instructor_notes": ""
            },
            {
              "id": 282953,
              "key": "e0b262c4-face-4d5f-9733-0d4937c483d0",
              "title": "Exploring a Library",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e0b262c4-face-4d5f-9733-0d4937c483d0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of these classes are involved in detecting faces in a bitmap using the Mobile Vision library?",
                "answers": [
                  {
                    "id": "a1489686115151",
                    "text": "FaceDetector",
                    "is_correct": true
                  },
                  {
                    "id": "a1489686158285",
                    "text": "Landmark",
                    "is_correct": false
                  },
                  {
                    "id": "a1489686167248",
                    "text": "Frame",
                    "is_correct": true
                  },
                  {
                    "id": "a1489686174627",
                    "text": "Face",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 286177,
          "key": "ff3a859c-3dd8-4c1d-9969-70f796af4fd7",
          "title": "Exercise: Explore Starter Code",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ff3a859c-3dd8-4c1d-9969-70f796af4fd7",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286192,
              "key": "ae6957fb-5b4d-4775-a9d8-d1daf119f3d2",
              "title": "Explore Starter Code",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "zcSWlqM2pXo",
                "china_cdn_id": "zcSWlqM2pXo.mp4"
              }
            },
            {
              "id": 289097,
              "key": "bf95b8e7-5725-4b74-9387-3276da419d53",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Emojify Code\n\nThe code for this app can be found in the [Emojify repository](https://github.com/udacity/AdvancedAndroid_Emojify).  Runtime permissions information can be found in the [Android Developer Docs](https://developer.android.com/training/permissions/requesting.html). \n\nDownload this repository using the command:\n\n```bash\ngit clone https://github.com/udacity/AdvancedAndroid_Emojify.git\n```\n\nIf you need to a refresher on how the code is organized, please refer to the [concept where we introduced how to work with the course code](https://classroom.udacity.com/courses/ud857/lessons/8b2a9d63-0ff5-48ff-90d3-a9855b701dae/concepts/41b82e3c-2797-46e5-8a66-684098ca8cbb).\n\nTake some time to review the Starter Code.\n\n### Exercise Code\n**Exercise:** [TLIB.00-StartingCode](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.00-StartingCode)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 282955,
          "key": "6b80a4fa-fcdc-4409-b03d-be5b4578a534",
          "title": "Explore the Starter Code: Bitmap Utils",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6b80a4fa-fcdc-4409-b03d-be5b4578a534",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 289122,
              "key": "1c051319-e5c9-43b2-be1a-6a56bde8f951",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "`resamplePic()`:\nThe `resamplePic()` method gets the height and width of the device screen in pixels, and resamples the passed in image to fit the screen.\n\n`createTempImageFile()`:\nThis method creates a temporary file in the external cache directory and returns the new temp file.\n\n`deleteImageFile()`:\nThis method attempts to delete the image at the passed in path. If it fails, it shows a toast.\n\n`galleryAddPic()`:\nThis method cause the image content provider to add the image from the passed in path to the system gallery, so it can be found by other app. It is only called inside the saveImage() described below.\n\n`saveImage()`:\nThis method saves the passed in Bitmap in the External Storage, in the subdirectory called \"Emojify\". It also adds the image to the system gallery by calling the above `galleryAddPic()`.\n\n`shareImage()`:\nThis method creates a share implicit intent, which will bring up the system chooser with apps that handle sharing an image.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 286178,
          "key": "3700e068-175e-47f5-94a7-86828d07f81f",
          "title": "Explore Starter Code Outro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3700e068-175e-47f5-94a7-86828d07f81f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286193,
              "key": "3c8681ed-75ac-469f-997d-dd9d03659add",
              "title": "Explore Starter Code Outro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "IjRX2bTiTYg",
                "china_cdn_id": "IjRX2bTiTYg.mp4"
              }
            }
          ]
        },
        {
          "id": 286179,
          "key": "b5bff7d4-f1f6-452f-9fff-2677298b6aa1",
          "title": "Exercise: Add Gradle Dependency",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b5bff7d4-f1f6-452f-9fff-2677298b6aa1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286194,
              "key": "7f39f736-bbeb-496c-9021-59c244807063",
              "title": "Exercise: Add Gradle Dependency",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "K_aLHdX7HRI",
                "china_cdn_id": "K_aLHdX7HRI.mp4"
              }
            },
            {
              "id": 293782,
              "key": "467108b3-76b7-40c5-8ae3-8e58adc7e472",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Add Gradle Dependency\n\nIn this exercise, you will add the Google Mobile Vision library dependency to your build.gradle file, so you can access the library's classes and methods in your project.\n\n[Set Up Google Play Services documentation](https://developers.google.com/android/guides/setup)\n\n### Exercise Code\n**Exercise:** [TLIB.01-Exercise-AddGradleDependency](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.01-Exercise-AddGradleDependency)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 293783,
              "key": "535c29eb-4b48-4a1e-97e3-a23cb92902bb",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "535c29eb-4b48-4a1e-97e3-a23cb92902bb",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Add Google Mobile Vision Library in build.gradle"
              ],
              "positive_feedback": "Off to a great start! With the dependency added, we can now access the library's classes and methods in our project. \n\n**Solution:** [[TLIB.01-Solution-AddGradleDependency](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.01-Solution-AddGradleDependency)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.00-StartingCode...TLIB.01-Exercise-AddGradleDependency?expand=1)]",
              "video_feedback": null,
              "description": "Complete the TODO so we can start using the Google Mobile Vision Library"
            }
          ]
        },
        {
          "id": 286180,
          "key": "1d024e2d-92b6-4028-be45-005efd72049d",
          "title": "Exercise: Detect Faces Intro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1d024e2d-92b6-4028-be45-005efd72049d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 292354,
              "key": "7cd65a0e-b51a-4cc6-b40e-1d066fe5807f",
              "title": "Exercise: Detect Faces Intro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "J0IxySlL6Ig",
                "china_cdn_id": "J0IxySlL6Ig.mp4"
              }
            },
            {
              "id": 293785,
              "key": "85b69c87-ea62-42e3-81b0-ea00c13c4d73",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Detect Faces\n\nIn this exercise, you'll use the Mobile Vision library to detect the number faces in an image, and print the result in the log\n\n### Exercise Code\n**Exercise:** [TLIB.02-Exercise-DetectFaces](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.02-Exercise-DetectFaces)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 293786,
              "key": "0fabe3b2-69eb-4925-9437-3f37b1c06a2d",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0fabe3b2-69eb-4925-9437-3f37b1c06a2d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create a Java class called Emojifier",
                "Create a static method in the Emojifier class called detectFaces() which detects and logs the number of faces in a given bitmap",
                "Call the new detectFaces() method, passing in the resampled bitmap to detect the faces in the picture"
              ],
              "positive_feedback": "Great work!\n\n**Solution:** [[TLIB.02-Solution-DetectFaces](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.02-Solution-DetectFaces)] [[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.02-Exercise-DetectFaces...TLIB.02-Solution-DetectFaces)]",
              "video_feedback": null,
              "description": "Complete the TODOs in the exercise:"
            }
          ]
        },
        {
          "id": 282956,
          "key": "801710e8-f10e-4f0e-aeda-2b90aa2f1117",
          "title": "Detecting Faces",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "801710e8-f10e-4f0e-aeda-2b90aa2f1117",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282957,
              "key": "d830b0de-bb92-4b57-9571-b6d990b3d87b",
              "title": "Detecting Faces",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d830b0de-bb92-4b57-9571-b6d990b3d87b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What two methods should you use with the FaceDetector.Builder to turn on Classifications and improve performance by disabling tracking (which maintains an ID between consecutive frames if the same face exists in both of them?)",
                "answers": [
                  {
                    "id": "a1489686585659",
                    "text": "`setTrackingEnabled(true)`",
                    "is_correct": false
                  },
                  {
                    "id": "a1489686641327",
                    "text": "`setLandmarkType(FaceDetector.ALL_LANDMARKS)`",
                    "is_correct": false
                  },
                  {
                    "id": "a1489686654487",
                    "text": "`setClassificationType(FaceDetector.ALL_CLASSIFICATIONS)`",
                    "is_correct": true
                  },
                  {
                    "id": "a1489686665413",
                    "text": "`setTrackingEnabled(false)`",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 286181,
          "key": "c0ada783-1ee0-4046-8b6a-5b9c597cb77a",
          "title": "Detect Faces",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c0ada783-1ee0-4046-8b6a-5b9c597cb77a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286196,
              "key": "b70dab58-c46e-4fc7-bed3-5c66c21aba51",
              "title": "Detect Faces",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "lWkz-G1l3Z4",
                "china_cdn_id": "lWkz-G1l3Z4.mp4"
              }
            }
          ]
        },
        {
          "id": 286182,
          "key": "e7fe3da4-e548-4386-aa84-180cefccf9a8",
          "title": "Exercise: Get Probabilities",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e7fe3da4-e548-4386-aa84-180cefccf9a8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286197,
              "key": "81b58353-03ab-4b46-a87a-ab5439828ce2",
              "title": "Exercise: Get Probabilities",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "WJuSR0jvIcc",
                "china_cdn_id": "WJuSR0jvIcc.mp4"
              }
            },
            {
              "id": 293789,
              "key": "72dd3eee-e8ab-4028-b9d6-c706a44ddee7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Get Probabilities\n\nIn this exercise, you'll extend the detectFaces() method to print the classification probabilities in log.\n\n### Exercise Code\n**Exercise:** [TLIB.03-Exercise-GetClassificationProbabilities](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.03-Exercise-GetClassificationProbabilities)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 293793,
              "key": "708696c3-9878-4c59-a198-7d02a043eb99",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "708696c3-9878-4c59-a198-7d02a043eb99",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create a static method called getClassifications() which logs the probability of each eye being open and that the person is smiling",
                "Iterate through the faces, calling getClassifications() for each face"
              ],
              "positive_feedback": "Probabilities down :D\n\n**Solution:** [[TLIB.03-Solution-GetClassificationProbabilities](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.03-Solution-GetClassificationProbabilities)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.03-Exercise-GetClassificationProbabilities...TLIB.03-Solution-GetClassificationProbabilities?expand=1)]",
              "video_feedback": null,
              "description": "Complete the TODOs in the exercise:"
            }
          ]
        },
        {
          "id": 292361,
          "key": "b8ac18d7-d0a5-4ee5-bcd9-ecd515152acc",
          "title": "Overlay Emoji Intro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b8ac18d7-d0a5-4ee5-bcd9-ecd515152acc",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 292362,
              "key": "2973f390-e997-4928-bfe0-0c59b4f605df",
              "title": "Overlay Emoji Intro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "vVXei6G9MPE",
                "china_cdn_id": "vVXei6G9MPE.mp4"
              }
            },
            {
              "id": 298504,
              "key": "d2f60db5-a9a2-4d61-a258-2f879969a281",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "More info about [Canvas Object](https://developer.android.com/reference/android/graphics/Canvas.html)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 286418,
          "key": "2e2f93db-10a2-4efa-9a70-91905e98050c",
          "title": "Exercise: Map to Emojis",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2e2f93db-10a2-4efa-9a70-91905e98050c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 292355,
              "key": "6fd0d8e1-7575-4e9b-9e48-995df529d5d5",
              "title": "Exercise: Map To Emojis",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "yP0BUzA0PFo",
                "china_cdn_id": "yP0BUzA0PFo.mp4"
              }
            },
            {
              "id": 293794,
              "key": "70e3f5a9-8dc6-4c8a-8137-a6aaf160e894",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Map to Emojis\n\nIn this exercise, you'll map the classification probabilities to the closest matching emoji.\n\n### Exercise Code\n**Exercise:** [TLIB.04-Exercise-MatchFaceToEmoji](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.04-Exercise-MatchFaceToEmoji)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 293799,
              "key": "b29120e5-053a-434c-8775-1521cd7d4268",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b29120e5-053a-434c-8775-1521cd7d4268",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create an enum class called Emoji that contains all the possible emoji you can make",
                "Change the name of the getClassifications() method to whichEmoji()",
                "Create threshold constants for a person smiling, and and eye being ope",
                "Create 3 boolean variables to track the state of the facial expression",
                "Create an if/else system that selects the appropriate emoji"
              ],
              "positive_feedback": "*High five!* The emojify-ing process is really coming together!\n\n**Solution:** [[TLIB.04-Solution-MatchFaceToEmoji](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.04-Solution-MatchFaceToEmoji)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.04-Exercise-MatchFaceToEmoji...TLIB.04-Solution-MatchFaceToEmoji?expand=1)]",
              "video_feedback": null,
              "description": "Complete the TODOs in the exercise:"
            }
          ]
        },
        {
          "id": 286183,
          "key": "20d7c0a4-bc83-4b99-b29d-31c331d846b2",
          "title": "Set Probability Thresholds",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "20d7c0a4-bc83-4b99-b29d-31c331d846b2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 292356,
              "key": "929df7f8-b950-4fa0-84b6-76edfadfe08e",
              "title": "Set Probability Thresholds",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "n1hOTKXTaBg",
                "china_cdn_id": "n1hOTKXTaBg.mp4"
              }
            }
          ]
        },
        {
          "id": 282970,
          "key": "a865723f-d61d-487a-ab24-7ebd97589e94",
          "title": "Exercise: Overlay Emoji - Step 1",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a865723f-d61d-487a-ab24-7ebd97589e94",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282971,
              "key": "308a9fea-e788-4452-b896-432db49a7d68",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "The `whichEmoji()` method already determines the proper Emoji based on the facial expression.\n \nYou should now use it in a switch statement to select the proper emoji drawable. Do the following:\n\nChange the return type of the whichEmoji() method to the Emoji enum.\n\nAt the end of the method, return the proper Emoji.\n\nRename the `detectFaces()` method to `detectFacesAndOverlayEmoji()` since this method will now overlay the proper drawable as well as detect the faces, and change it's return type from `void` to `Bitmap`.\nInitialize an empty drawable inside the loop which iterates through the detected faces called `emojiBitmap`, used to hold the correct emoji drawable.\nCreate a switch statement using the result of the `whichEmoji()` method as the argument, with a case for each Emoji, and use the `BitmapFactory.decodeResource()` method to define the initialized drawable to be the appropriate Emoji based on the result of the switch.\n\nYou should now have the following components:\nThe original picture bitmap from the camera, passed into the `detectFacesAndOverlayEmoji()` method.\nThe appropriate Emoji bitmap for each face, defined inside the faces for loop.\nThe detected face, again defined inside the loop.\n\nThe next step involves creating a new method, `addBitmapToFace()`, which takes the three components we just discussed (picture bitmap, Emoji bitmap, and Face object), and combines them, overlaying the Emoji bitmap over the detected face on each iteration of the loop and returning the resulting, combined bitmap. \n\nCombining Bitmaps is straightforward, but outside of the scope of this lesson. You can copy the code for this method below, and I will step through the functionality in the next node. For a more detailed explanation on working with 2D graphics take a look at the [Developer Docs](https://developer.android.com/guide/topics/graphics/2d-graphics.html).\n\n```\n\n/**\n* Combines the original picture with the emoji bitmaps\n*\n* @param backgroundBitmap The original picture\n* @param emojiBitmap      The chosen emoji\n* @param face             The detected face\n* @return The final bitmap, including the emojis over the faces\n*/\nprivate static Bitmap addBitmapToFace(Bitmap backgroundBitmap, Bitmap emojiBitmap, Face face) {\n\n   // Initialize the results bitmap to be a mutable copy of the original image\n   Bitmap resultBitmap = Bitmap.createBitmap(backgroundBitmap.getWidth(),\n           backgroundBitmap.getHeight(), backgroundBitmap.getConfig());\n\n   // Scale the emoji so it looks better on the face\n   float scaleFactor = EMOJI_SCALE_FACTOR;\n\n   // Determine the size of the emoji to match the width of the face and preserve aspect ratio\n   int newEmojiWidth = (int) (face.getWidth() * scaleFactor);\n   int newEmojiHeight = (int) (emojiBitmap.getHeight() *\n           newEmojiWidth / emojiBitmap.getWidth() * scaleFactor);\n\n\n   // Scale the emoji\n   emojiBitmap = Bitmap.createScaledBitmap(emojiBitmap, newEmojiWidth, newEmojiHeight, false);\n\n   // Determine the emoji position so it best lines up with the face\n   float emojiPositionX =\n           (face.getPosition().x + face.getWidth() / 2) - emojiBitmap.getWidth() / 2;\n   float emojiPositionY =\n           (face.getPosition().y + face.getHeight() / 2) - emojiBitmap.getHeight() / 3;\n\n   // Create the canvas and draw the bitmaps to it\n   Canvas canvas = new Canvas(resultBitmap);\n   canvas.drawBitmap(backgroundBitmap, 0, 0, null);\n   canvas.drawBitmap(emojiBitmap, emojiPositionX, emojiPositionY, null);\n\n   return resultBitmap;\n}\n\n```",
              "instructor_notes": ""
            },
            {
              "id": 297373,
              "key": "a6eaab79-caaf-44b2-ab48-913f2a481cb7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Overlay Emoji Step 1\n\nIn this code step, you'll add the bitmap drawable of the selected emoji on top of the detected face in the original picture.\n\n### Exercise Code\n**Exercise:** [TLIB.05-Exercise-DrawEmojiOverFaces](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.05-Exercise-DrawEmojiOverFaces)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 297374,
              "key": "4a34f7bc-8fae-4350-a5c3-98c15baf4d78",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4a34f7bc-8fae-4350-a5c3-98c15baf4d78",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Change the return type of the whichEmoji() method",
                "Have the method return the selected Emoji type",
                "Change the name of the detectFaces() method and the return type",
                "Create a variable called emojiBitmap",
                "Create a switch statement on the result of the whichEmoji()",
                "Create and initialize a variable called resultBitmap",
                "Call addBitmapToFace()",
                "Return the resultBitmap",
                "Change the method call from detectFaces() to detectFacesAndOverlayEmoji()"
              ],
              "positive_feedback": ":D \n\n**Solution:** [[TLIB.05-Solution-DrawEmojiOverFaces](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.05-Solution-DrawEmojiOverFaces)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.05-Exercise-DrawEmojiOverFaces...TLIB.05-Solution-DrawEmojiOverFaces?expand=1)]",
              "video_feedback": null,
              "description": "Complete the TODOs in this exercise:"
            }
          ]
        },
        {
          "id": 292363,
          "key": "f566361a-8421-4edb-9bc4-c5c942f19dcf",
          "title": "Overlay Emoji - Step 2",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f566361a-8421-4edb-9bc4-c5c942f19dcf",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 292364,
              "key": "3ac3c1df-0a7c-4ec2-aac2-9aeed0fc6d19",
              "title": "Overlay Emoji - Step 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "C-Dt76ko_Nc",
                "china_cdn_id": "C-Dt76ko_Nc.mp4"
              }
            }
          ]
        },
        {
          "id": 286184,
          "key": "957a1f65-7c2b-4b0c-b5c5-f07dd07cc4d1",
          "title": "Overlay Emoji Outro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "957a1f65-7c2b-4b0c-b5c5-f07dd07cc4d1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286200,
              "key": "a205471d-0ef5-4317-99bc-be7e85721f6e",
              "title": "Overlay Emoji Outro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Ulbj0HOSUVY",
                "china_cdn_id": "Ulbj0HOSUVY.mp4"
              }
            }
          ]
        },
        {
          "id": 282973,
          "key": "62247b4f-a1d6-4653-9c34-da8fd7bdc4c0",
          "title": "Exercise: Must Have Libraries",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "62247b4f-a1d6-4653-9c34-da8fd7bdc4c0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 282974,
              "key": "b1afb9a0-bbe1-4aec-b0ea-6620c885e427",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To conclude this lesson, here are some other Libraries that many Android applications use. \n\n-  **Picasso and Glide**: A common problem that Android developers face is the proper use of images in their application. Including many high quality images will drastically increase your apk size, while downloading images over the network comes with memory consumption and network availability problems. Picasso and Glide are both very robust libraries that facilitate the loading, caching and displaying of Images. They include tons of amazing features, such as the ability to include placeholder images and local caching, so almost every application that includes images uses one of these libraries. Check out the documentation on [Picasso](http://square.github.io/picasso/) and [Glide](https://github.com/bumptech/glide). \n\n-  **Butterknife**:\nIf you've created an app with a lot of views, then you'll know how tedious it can be to write `findViewById()` calls for each one, as well as to create custom onClicks for each one. These tasks pertain to Data Binding, the realm of connecting your data to the user facing views. Butterknife is a revolutionary library that uses annotations to make this much easier. Check out <a href=\"http://jakewharton.github.io/butterknife/\" target=\"_blank\">the documentation</a> for some examples of how this can make your life much easier. You can even implement it in our Emojifier app if you want; check out <a href=\"https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.06-Solution-AddButterknife\" target=\"_blank\">this code branch</a> to see how it would look.\n\n- **Timber**:\nCreated and maintained by the same developer who created Butterknife, <a href=\"http://jakewharton.github.io/timber/\" target=\"_blank\">Timber</a> is a really cool tool for Logging. I'm sure you have all used the built-in Logger and know the importance of seeing information about your app in the debugger. Timber takes this further by providing a modifiable platform for all your logging needs. It contains these, and many more features:\n  - Log without a TAG (Timber creates one for you)\n - Create different logging logic for Debug and Release version of your app (you probably only want to see errors in the release version)\n - Automatic error detection\n\n You can see this library in action in our Emojifier app <a href=\"https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.07-Solution-AddTimber\" target=\"_blank\">here</a>.\n",
              "instructor_notes": ""
            },
            {
              "id": 297375,
              "key": "56d92904-b945-44b5-a38a-49499f7e2732",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Must Have Libraries\n\n### Exercise Code\n**Exercise:** [TLIB.06-Exercise-AddButterknife](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.06-Exercise-AddButterknife)\n\n**Exercise:** [TLIB.07-Exercise-AddTimber](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.07-Exercise-AddTimber)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 297376,
              "key": "22bab70d-a51d-4e9c-921c-16617fb0b72d",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "22bab70d-a51d-4e9c-921c-16617fb0b72d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Complete the setup for Timber in Emojify",
                "Complete the setup for Butterknife in Emojify"
              ],
              "positive_feedback": "Timber! Another exercise down and completed :)\n\n**Solution:** [[TLIB.06-Exercise-AddButterknife](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.06-Exercise-AddButterknife)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.06-Exercise-AddButterknife...TLIB.06-Solution-AddButterknife?expand=1)]\n\n\n**Solution:** [[TLIB.07-Exercise-AddTimber(https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.06-Exercise-AddButterknife)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.07-Exercise-AddTimber...TLIB.07-Solution-AddTimber?expand=1)]",
              "video_feedback": null,
              "description": ""
            }
          ]
        },
        {
          "id": 286185,
          "key": "53704183-35a6-412d-83ed-55fbdc8ae628",
          "title": "Must Have Libraries Outro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "53704183-35a6-412d-83ed-55fbdc8ae628",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286202,
              "key": "1ce5daf7-d226-47e4-8619-e7386980a387",
              "title": "Must Have Libraries Outro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "AIxbwzFQFHM",
                "china_cdn_id": "AIxbwzFQFHM.mp4"
              }
            },
            {
              "id": 298507,
              "key": "8a645af2-9e4b-4a32-9af3-3a9d79410613",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "- [Butterknife Library](https://github.com/JakeWharton/butterknife)\n- [Timber Library](https://github.com/JakeWharton/timber)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 286186,
          "key": "f5282c3d-ff7b-4b65-b82d-89f8d6efe15c",
          "title": "Libraries Outro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f5282c3d-ff7b-4b65-b82d-89f8d6efe15c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 286188,
              "key": "9e69d345-9e47-48b4-83be-0fba04cbdf73",
              "title": "Libraries Outro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "sc8d9DajAuo",
                "china_cdn_id": "sc8d9DajAuo.mp4"
              }
            },
            {
              "id": 289107,
              "key": "fe6b9258-8efa-4aae-9ca1-32da036f285b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Instructor Notes\nCheck out the [Developer Docs](https://developer.android.com/studio/projects/android-library.html) on making an Android library. ",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  }
}