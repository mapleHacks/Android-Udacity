{
  "data": {
    "lesson": {
      "id": 183175,
      "key": "93affc67-3f0b-4f9b-b3a4-a7a26f241a86",
      "title": "Create Project Sunshine",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "In the first lesson of Developing Android Apps, you'll learn how to create and run your first simple Android app. In doing so, you'll explore how to create simple layouts for Android, how Android runs on the phone and the IDE Android Studio.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "http://d2uz2655q5g6b2.cloudfront.net/93affc67-3f0b-4f9b-b3a4-a7a26f241a86/183175/1516668087548/Create%20Project%20Sunshine%20Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "http://d2uz2655q5g6b2.cloudfront.net/93affc67-3f0b-4f9b-b3a4-a7a26f241a86/183175/1516668050165/Create%20Project%20Sunshine%20Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 196082,
          "key": "0eb4fac2-9d1b-477d-bafb-1743f715d4a5",
          "title": "Introduction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0eb4fac2-9d1b-477d-bafb-1743f715d4a5",
            "completed_at": "2020-05-11T10:58:29.530Z",
            "last_viewed_at": "2020-05-11T10:59:16.970Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 199333,
              "key": "93bb9dbb-0d64-48b2-bd49-9a6f24c7122f",
              "title": "Introduction",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "junCRL5Jm2w",
                "china_cdn_id": "junCRL5Jm2w.mp4"
              }
            }
          ]
        },
        {
          "id": 189146,
          "key": "338e2164-2dae-4b96-9600-4082ffea10f7",
          "title": "Are you ready?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "338e2164-2dae-4b96-9600-4082ffea10f7",
            "completed_at": "2020-05-11T10:59:29.128Z",
            "last_viewed_at": "2020-05-11T11:00:16.222Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 205490,
              "key": "041af06f-74ae-4c01-8920-6ca7b6fb74ac",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Are you ready?\n\nThis course assumes you are comfortable working in Java. In addition we assume that you have some basic familiarity with XML (or HTML), [GitHub](https://github.com), networking and threading.\n\n## What do I do if I don't have these prerequisites?\n\nDon't fret! We have other Android and Java related courses.\n\n* [Android Development for Beginners](https://www.udacity.com/course/android-development-for-beginners--ud837): This is the first course in a series of free courses about Android development. It assumes no programming knowledge and is perfect for the beginner student who wants to jump quickly into making an Android app. You'll learn Android in parallel to learning basic Java. After this course, you may wish to take our other beginner courses for [User Input](https://www.udacity.com/course/android-basics-user-input--ud836), [Multi-Screen Apps](https://www.udacity.com/course/android-basics-multi-screen-apps--ud839), [Networking](https://www.udacity.com/course/android-basics-networking--ud843) and [Data Storage](https://www.udacity.com/course/android-basics-data-storage--ud845).\n\n* [Android Basics Nanodegree Program](https://www.udacity.com/course/android-basics-nanodegree-by-google--nd803):  To add features and support on top of our free courses, sign up for the Android Basics Nanodegree Program to get access to ten projects, code reviews, personalized feedback, one-on-one appointments and moderated forums. If you'd like to build a portfolio of Android projects and have the support of Udacity mentors and staff, this option is for you.\n\n* [Java Programming Basics](https://www.udacity.com/course/java-programming-basics--ud282): If you'd like an introduction to pure Java programming, consider taking this course, a deep dive into the basics of Java.\n\n* [Git and Github](https://www.udacity.com/course/how-to-use-git-and-github--ud775): If you're not sure what GitHub is all about, take this course to help you manage your code and collaborate with other developers.\n\n*  [Android Development for Beginners - Lesson 1](https://www.udacity.com/course/android-development-for-beginners--ud837): If you've never worked with a language like XML or HTML but you're familiar with Java, consider taking the first lesson of the Android Development for Beginners class. It is solely focused on XML layouts for Android.",
              "instructor_notes": ""
            },
            {
              "id": 195294,
              "key": "dbbed888-8c30-4c7c-a94c-a6e4b434551c",
              "title": "Are you ready?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "dbbed888-8c30-4c7c-a94c-a6e4b434551c",
                "completed_at": "2020-05-11T10:59:38.412Z",
                "last_viewed_at": "2020-05-11T10:59:38.412Z",
                "unstructured": "{\"selected_id\":\"a1475785956968\",\"is_correct\":false}"
              },
              "question": {
                "prompt": "How many years of programming experience do you have in Java?",
                "answers": [
                  {
                    "id": "a1475785956968",
                    "text": "Less than one year",
                    "is_correct": false
                  },
                  {
                    "id": "a1475785978723",
                    "text": "One or more years",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 195295,
              "key": "bddd9845-967c-4763-a57a-4f3806d51a26",
              "title": "Are you ready?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bddd9845-967c-4763-a57a-4f3806d51a26",
                "completed_at": "2020-05-11T10:59:53.324Z",
                "last_viewed_at": "2020-05-11T10:59:53.324Z",
                "unstructured": "{\"selected_id\":\"a1475786159503\",\"is_correct\":false}"
              },
              "question": {
                "prompt": "Are you familiar with networking and threading?",
                "answers": [
                  {
                    "id": "a1475786143902",
                    "text": "Yes",
                    "is_correct": true
                  },
                  {
                    "id": "a1475786159503",
                    "text": "No",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 195296,
              "key": "4623d44b-c45b-4152-bb0d-7e2afab54310",
              "title": "Are you ready?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4623d44b-c45b-4152-bb0d-7e2afab54310",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Have you worked with source control, such as GitHub?",
                "answers": [
                  {
                    "id": "a1475786208331",
                    "text": "Yes",
                    "is_correct": true
                  },
                  {
                    "id": "a1475786225631",
                    "text": "No",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 195297,
              "key": "bbedadd4-466f-435a-a8a3-c1c61b039f9d",
              "title": "Are you ready?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bbedadd4-466f-435a-a8a3-c1c61b039f9d",
                "completed_at": "2020-05-11T11:00:03.978Z",
                "last_viewed_at": "2020-05-11T11:00:03.978Z",
                "unstructured": "{\"selected_id\":\"a1475786534225\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "Do you have a basic understanding of XML?",
                "answers": [
                  {
                    "id": "a1475786534225",
                    "text": "Yes",
                    "is_correct": true
                  },
                  {
                    "id": "a1475786614948",
                    "text": "No",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 189147,
          "key": "20a61f09-1c8b-4f13-a171-961a347d29c1",
          "title": "Introducing Project Sunshine",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "20a61f09-1c8b-4f13-a171-961a347d29c1",
            "completed_at": "2020-05-11T11:00:08.374Z",
            "last_viewed_at": "2020-05-11T11:00:55.974Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 195298,
              "key": "d855bd42-36d7-4fe9-a7d1-7e1435e281ae",
              "title": "Introducing Project Sunshine",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "q7uhEwfUao4",
                "china_cdn_id": "q7uhEwfUao4.mp4"
              }
            }
          ]
        },
        {
          "id": 189150,
          "key": "98b2f686-aca1-4547-9632-31e84ccca355",
          "title": "A Brief Intro to Android Studio",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "98b2f686-aca1-4547-9632-31e84ccca355",
            "completed_at": "2020-05-11T11:01:39.733Z",
            "last_viewed_at": "2020-05-11T11:02:26.358Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 205493,
              "key": "89f5491e-a2f3-4d56-b40b-a29fc18b4b3b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# A Brief Introduction to Android Studio\n\nIn this course we strongly recommend using [Android Studio](https://developer.android.com/studio/index.html) as your development environment. It is the defacto IDE for Android Development, and the environment we use in all videos in the course. \n\nAndroid Studio is specifically made for creating Android Apps. It is actively supported and maintained by Google. It even contains an Android emulator so that you can start creating Android Apps without needing a real device. Jamal Eason will describe a few more features which will be helpful on your journey to becoming an Android Developer.",
              "instructor_notes": ""
            },
            {
              "id": 195299,
              "key": "b23e89e0-ad16-4457-82fe-a7934396fe45",
              "title": "A Brief Intro to Android Studio",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "Check out developer.android.com for a [full feature list for Android studio](https://developer.android.com/studio/features/).",
              "video": {
                "youtube_id": "iBbfknspWWk",
                "china_cdn_id": "iBbfknspWWk.mp4"
              }
            },
            {
              "id": 205494,
              "key": "7fe86f12-bc4e-4cfa-aeff-fedbca5d36de",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Installing Android Studio\n\nYou should install Android Studio now, and set it up to use either a physical Android device or an emulated phone. If you need guidance for installing Android Studio, there is a mini course with instructions for both Windows and Mac installations which will also go through how to setup an emulator and make your first Hello World app.\n\n## [Go to the Android Studio Installation Mini Course](https://classroom.udacity.com/courses/ud808/lessons/4216368924/concepts/43072785890923#)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 189152,
          "key": "115d08bb-f114-46fa-b693-5c6ce1445c07",
          "title": "Coding, GitHub and Flow",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "115d08bb-f114-46fa-b693-5c6ce1445c07",
            "completed_at": "2020-05-11T11:05:10.751Z",
            "last_viewed_at": "2020-05-11T11:05:57.222Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 195310,
              "key": "58302fbc-becb-43aa-9ca8-8a38ccd75c7f",
              "title": "Coding, GitHub, and Flow",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "xDboyz4cJ5Q",
                "china_cdn_id": "xDboyz4cJ5Q.mp4"
              }
            },
            {
              "id": 199882,
              "key": "3f62a5b2-4b7c-4159-8e0e-3b0de8f461d2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Code Repositories\n\n\nOne of the unique things about this class is we will go through over ten code examples with you, as well as the Sunshine app. The code for this course is found in two repositories:\n\n\n* [Sunshine Code Repository](https://github.com/udacity/ud851-Sunshine) ([ZIP Download](https://github.com/udacity/ud851-Sunshine/archive/student.zip))\n* [Toy App Repository](https://github.com/udacity/ud851-Exercises) ([ZIP Download](https://github.com/udacity/ud851-Exercises/archive/student.zip))\n\n\n## Code Steps\nYou should download both of the repositories above. As shown in the video, the example repository (also known as the toy app repository) contains folders for each app in the course:",
              "instructor_notes": ""
            },
            {
              "id": 205499,
              "key": "30dcfc35-16c5-4b7a-8e8e-fa42e753df52",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/582533a4_screen-shot-2016-11-10-at-6.53.18-pm/screen-shot-2016-11-10-at-6.53.18-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/30dcfc35-16c5-4b7a-8e8e-fa42e753df52",
              "caption": "",
              "alt": null,
              "width": 1040,
              "height": 459,
              "instructor_notes": null
            },
            {
              "id": 205501,
              "key": "8b6d8fb6-55e0-4655-b5e0-ca2f132e7ab1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Inside of these folders there are exercises you can do. Each exercise has a starting folder and a solution folder, which contain versions of the app at the start of the exercise and after the exercise.",
              "instructor_notes": ""
            },
            {
              "id": 205500,
              "key": "b612f268-bc91-4adb-a0e2-0b6175c99c63",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/582533d5_screen-shot-2016-11-10-at-6.58.04-pm/screen-shot-2016-11-10-at-6.58.04-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b612f268-bc91-4adb-a0e2-0b6175c99c63",
              "caption": "",
              "alt": null,
              "width": 532,
              "height": 353,
              "instructor_notes": null
            },
            {
              "id": 205502,
              "key": "2a9321de-22b3-4c8d-b5e4-67c99b914383",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In addition, when you solve a code step, there are links to GitHub pages which show the code differences between the exercise and solution repositories.",
              "instructor_notes": ""
            },
            {
              "id": 205504,
              "key": "10108fec-fac3-4183-a07f-39f533a4a0f1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/5825345e_screen-shot-2016-11-10-at-7.00.25-pm/screen-shot-2016-11-10-at-7.00.25-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/10108fec-fac3-4183-a07f-39f533a4a0f1",
              "caption": "",
              "alt": null,
              "width": 821,
              "height": 561,
              "instructor_notes": null
            },
            {
              "id": 199883,
              "key": "527cbc2a-e7be-4349-a1bf-04cafd190526",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": " ",
              "instructor_notes": ""
            },
            {
              "id": 205503,
              "key": "214784a4-8a89-4f2e-a942-76ba218c5347",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Sunshine is similarly divided up into code steps, with a solution and exercise folder.",
              "instructor_notes": ""
            },
            {
              "id": 205515,
              "key": "753be17e-0cf1-4720-9d74-1f72d68bb130",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/58254428_screen-shot-2016-11-10-at-8.07.41-pm/screen-shot-2016-11-10-at-8.07.41-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/753be17e-0cf1-4720-9d74-1f72d68bb130",
              "caption": "",
              "alt": null,
              "width": 1022,
              "height": 472,
              "instructor_notes": null
            },
            {
              "id": 205516,
              "key": "2e587473-1587-4ead-9176-82dbf5a834b9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Report Issues\nNotice any issues with the repository? File a GitHub issue in the [Sunshine repository](https://github.com/udacity/ud851-Sunshine/issues) or in the [Toy App repository](https://github.com/udacity/ud851-Exercises/issues).\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 194637,
          "key": "e501f2b0-e8cd-4554-b8ab-6552c5b8adb1",
          "title": "Quiz: Coding, GitHub and Flow",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e501f2b0-e8cd-4554-b8ab-6552c5b8adb1",
            "completed_at": "2020-05-11T11:08:01.915Z",
            "last_viewed_at": "2020-05-11T11:08:49.305Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 310187,
              "key": "7973cb87-7faf-4125-9df4-7c44fa7f13a1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Quiz: Coding, GitHub and Flow\n",
              "instructor_notes": ""
            },
            {
              "id": 194638,
              "key": "d3ed8ff8-ca38-433d-a98b-75d6b6012f6c",
              "title": "Coding, GitHub, and Flow",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d3ed8ff8-ca38-433d-a98b-75d6b6012f6c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "In this course, you should:",
                "answers": [
                  {
                    "id": "a1475263010653",
                    "text": "Continue working on multi-step programming exercises based on your previous answers.",
                    "is_correct": false
                  },
                  {
                    "id": "a1475263042858",
                    "text": "Move to the next exercise project after each quiz.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 194639,
              "key": "6a6d7a42-b60c-4edf-b199-af4fed43709c",
              "title": "Coding, GitHub, and Flow",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6a6d7a42-b60c-4edf-b199-af4fed43709c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "If the video code differs from GitHub,",
                "answers": [
                  {
                    "id": "a1475263092618",
                    "text": "the video must be right.",
                    "is_correct": false
                  },
                  {
                    "id": "a1475263122364",
                    "text": "consider GitHub the source of truth.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 194640,
              "key": "a95fdcbd-b2b8-4a4a-b7d5-02de88e9706a",
              "title": "Coding, GitHub, and Flow (Part 3)",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a95fdcbd-b2b8-4a4a-b7d5-02de88e9706a",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "If you get confused,",
                "answers": [
                  {
                    "id": "a1475263193939",
                    "text": "watch the video at least ten times",
                    "is_correct": false
                  },
                  {
                    "id": "a1475263243765",
                    "text": "immediately report an issue",
                    "is_correct": false
                  },
                  {
                    "id": "a1475263249624",
                    "text": "read the text surrounding the video, and then report issues if something is wrong",
                    "is_correct": true
                  },
                  {
                    "id": "a1478834351688",
                    "text": "[(ノಠ益ಠ)ノ彡┻━┻](http://knowyourmeme.com/memes/flipping-tables)",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 189154,
          "key": "f0aca178-1ff3-4786-bcf6-dddbb76b159d",
          "title": "Creating our First Project",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f0aca178-1ff3-4786-bcf6-dddbb76b159d",
            "completed_at": "2020-05-11T11:08:23.623Z",
            "last_viewed_at": "2020-05-11T11:09:10.494Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 195311,
              "key": "07bd0fcb-75cc-4aa2-8830-25a86b02014b",
              "title": "Creating our First Project",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "Package name: http://developer.android.com/guide/topics/manifest/manifest-element.html",
              "video": {
                "youtube_id": "rAZdrSGgQAI",
                "china_cdn_id": "rAZdrSGgQAI.mp4"
              }
            }
          ]
        },
        {
          "id": 189155,
          "key": "382dabfc-7477-46e1-99de-d050916d61e8",
          "title": "Android Min and Target Versions",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "382dabfc-7477-46e1-99de-d050916d61e8",
            "completed_at": "2020-05-11T11:08:56.918Z",
            "last_viewed_at": "2020-05-11T11:09:43.784Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 195312,
              "key": "1aee759e-e7f6-4c17-a0c9-16737c966295",
              "title": "Project Settings - Android Min and Target Versions",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "898kbKepSQs",
                "china_cdn_id": "898kbKepSQs.mp4"
              }
            }
          ]
        },
        {
          "id": 189156,
          "key": "5b0aab7f-c63c-4e5d-b336-bdc08985767a",
          "title": "Setting Min and Target",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5b0aab7f-c63c-4e5d-b336-bdc08985767a",
            "completed_at": "2020-05-11T11:09:01.803Z",
            "last_viewed_at": "2020-05-11T11:09:48.244Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 205509,
              "key": "6861b413-fec0-4963-a9f4-3d93c5725216",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Android Min and Target Versions\n\nAndroid 1.0 launched in 2008, and in just the 8 years since - there have been **13** new major platform releases. By convention, each release is named off of a sugary treat, and the releases are named alphabetically.\n\nOn the [Android Developer site](https://developer.android.com/about/dashboards/index.html#Platform), we show the relative percentage of active Android devices running a given platform version, also presented in this cool pie chart. Because pie charts are awesome. \n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 205510,
              "key": "9eeb76d7-58a5-4704-be21-0d40a534e7b5",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/August/5d479e38_chartchs-500x250-cht-p-chco-c4df9b2c6fad0c-chl-froyo7cgingerbread7cice20cream20sandwich7cjelly20bean7ckitkat7clollipop7cmarshmallow7cnougat-chf-bg2cs2c00000000-chd-t3a0.12c1.32c1.32c13.72c25.22c34.12c24.02c0/chartchs-500x250-cht-p-chco-c4df9b2c6fad0c-chl-froyo7cgingerbread7cice20cream20sandwich7cjelly20bean7ckitkat7clollipop7cmarshmallow7cnougat-chf-bg2cs2c00000000-chd-t3a0.12c1.32c1.32c13.72c25.22c34.12c24.02c0.3",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9eeb76d7-58a5-4704-be21-0d40a534e7b5",
              "caption": "",
              "alt": null,
              "width": 450,
              "height": 225,
              "instructor_notes": null
            },
            {
              "id": 205511,
              "key": "222f0a1e-7103-424b-a6c7-cfa5c8e78a3e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "For our purposes though, you're really better off looking at it as a histogram. ",
              "instructor_notes": ""
            },
            {
              "id": 205513,
              "key": "ce7c4b5d-0049-4e9e-ac75-dee47185b061",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/58253ead_screen-shot-2016-11-10-at-7.43.52-pm/screen-shot-2016-11-10-at-7.43.52-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/ce7c4b5d-0049-4e9e-ac75-dee47185b061",
              "caption": "",
              "alt": null,
              "width": 677,
              "height": 415,
              "instructor_notes": null
            },
            {
              "id": 205512,
              "key": "a3c48c7e-630f-4c74-bfc9-afc1a01bb890",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you squint, you can almost see a vaguely bell shaped curve, with the oldest releases on the left, their popularity dropping off as devices are upgraded or replaced. The largest proportion of devices are in the middle, representing devices about 2 years old. The newest platforms, which gain in popularity as new phones are released or updates go out, are on the right.\n\n\n## Setting minSDK\n\nThe minSDK is the lowest SDK level that your app can run on. You can choose what level of devices to support. Setting the minSDK acts as a filter -- Google Play won’t show your app on devices running an Android platform version lower than your minimum SDK version. \n\nSo why not just set the minSDK to 1 and support everyone? Generally, you’ll want to target as many users as you can, but there's a cost associated with supporting older versions - things like creating different execution paths around deprecated or updated APIs, or presenting a different UX to devices with different features.  You need to balance the opportunity of expanding your audience, with the cost of supporting those users.  \n\nAlso remember that each release introduced new APIs and hardware support, so it may not make sense to make your app available to devices that don’t support your minimum feature set. Here are some examples of hardware support and features, tied to releases.\n\n* Home screen widgets (Cupcake)\n* Multiple finger tracking (Froyo)\n* Tablet (Honeycomb)\n* Android Beam (Jellybean)\n* Android TV, Auto, Wear (Lollipop)\n* Pro Audio (Marshmallow)\n\n\n## Setting targetSDK\n\nBy comparison, the targetSDK is NOT a high pass filter -- it’s used only to declare which platform version you've tested your app on.\nAn app targeted to a certain API or Android version will continue to be forward compatible on future releases -- the platform uses the target SDK values in case a future release makes a significant change to expected behavior, ensuring your app doesn’t break when a user’s phone gets upgraded. \n\nAndroid Studio by-default targets the latest release. If you’re developing a new app, there’s really no reason to target anything but the latest Android version, and once your app has been released, make it a point to update your target SDK and test as soon as possible when new platform releases roll out, so your app can take advantage of every new platform optimization and improvement.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 189157,
          "key": "02f2daf0-9f99-408a-b954-f12f373dee1a",
          "title": "Running Your Code",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "02f2daf0-9f99-408a-b954-f12f373dee1a",
            "completed_at": "2020-05-11T11:09:04.828Z",
            "last_viewed_at": "2020-05-11T11:09:52.264Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 206312,
              "key": "9e2276a4-ef94-40e3-837e-b530169abab8",
              "title": "Running Your Code on an Emulator or Device",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "pFoiA6ugWw4",
                "china_cdn_id": "pFoiA6ugWw4.mp4"
              }
            },
            {
              "id": 279396,
              "key": "94f3cd45-0b76-46d4-8034-ab1d7c56e465",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**Update**: At 1:00, Dan says to choose the Nougat version with Google APIs from the x86 images tab. This version is now listed under the **Recommended** tab (see the screenshot below from 2016; depending on your version of Android Studio, your view may be different).",
              "instructor_notes": ""
            },
            {
              "id": 279395,
              "key": "130e9fe6-a688-4f44-9a51-30cf5d53855c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/March/58c46a17_screen-shot-2017-03-11-at-1.19.34-pm/screen-shot-2017-03-11-at-1.19.34-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/130e9fe6-a688-4f44-9a51-30cf5d53855c",
              "caption": "",
              "alt": "",
              "width": 1970,
              "height": 1376,
              "instructor_notes": null
            },
            {
              "id": 206314,
              "key": "68eea772-0c52-4086-85b9-53bcbbf72ff8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "* [Guide to troubleshooting HAXM](https://software.intel.com/en-us/blogs/2014/03/14/troubleshooting-intel-haxm)\n* [Run Apps on an Emulator](https://developer.android.com/studio/run/emulator.html)\n* [Run Apps on a Hardware Device](https://developer.android.com/studio/run/device.html)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 189158,
          "key": "17476436-0b3e-46e3-a858-36d1e35b4491",
          "title": "Android Software Stack",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "17476436-0b3e-46e3-a858-36d1e35b4491",
            "completed_at": "2020-05-11T11:09:14.404Z",
            "last_viewed_at": "2020-05-11T11:10:01.513Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 206376,
              "key": "95a3f69f-fc25-415a-b00f-c6b689b84423",
              "title": "Introduce Android Software Stack & Gradle",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Gh5sbpd4T_k",
                "china_cdn_id": "Gh5sbpd4T_k.mp4"
              }
            },
            {
              "id": 206316,
              "key": "4e76ec93-aa7f-416e-b4ad-cfdde4cb08fb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Advanced Build Options\n\n## Gradle in Android Studio\n\nGradle is the build system of choice for Android Studio. Because of that, there's various functionality available within the platform. When you make a project, there are a few gradle build scripts automatically generated for you, shown below:",
              "instructor_notes": ""
            },
            {
              "id": 206319,
              "key": "c652ebc2-38cc-43be-bfd1-d123875947ab",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/582a88e3_screen-shot-2016-11-14-at-8.02.18-pm/screen-shot-2016-11-14-at-8.02.18-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c652ebc2-38cc-43be-bfd1-d123875947ab",
              "caption": "",
              "alt": null,
              "width": 341,
              "height": 212,
              "instructor_notes": null
            },
            {
              "id": 206320,
              "key": "8bf16648-466d-4d75-970b-23d492fcf113",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "When you press the green **Run** button, if the project has changed, the build scripts will run.",
              "instructor_notes": ""
            },
            {
              "id": 206317,
              "key": "d38bff08-12c7-4588-b78a-c0595d6230b5",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/582a8833_gradlerunbutton1/gradlerunbutton1.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d38bff08-12c7-4588-b78a-c0595d6230b5",
              "caption": "",
              "alt": null,
              "width": 743,
              "height": 44,
              "instructor_notes": null
            },
            {
              "id": 206323,
              "key": "f717f995-59ef-4a8b-92a8-b49690eb1df2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To explicitly run the build scripts, you can press the **Make Project** button:",
              "instructor_notes": ""
            },
            {
              "id": 206322,
              "key": "c8ec1d72-433a-44c2-bf50-31f3616d89df",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/582a8968_screen-shot-2016-11-14-at-8.04.23-pm/screen-shot-2016-11-14-at-8.04.23-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c8ec1d72-433a-44c2-bf50-31f3616d89df",
              "caption": "",
              "alt": null,
              "width": 241,
              "height": 77,
              "instructor_notes": null
            },
            {
              "id": 206324,
              "key": "5031189d-01bd-4815-83d8-d72037046576",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To observe logs and build errors for gradle, Android Studio includes a **Gradle Console**.",
              "instructor_notes": ""
            },
            {
              "id": 206328,
              "key": "d6c93fb2-0714-4c44-be7c-6db61377c2df",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/582a8f29_gradleconsole/gradleconsole.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d6c93fb2-0714-4c44-be7c-6db61377c2df",
              "caption": "",
              "alt": null,
              "width": 1410,
              "height": 254,
              "instructor_notes": null
            },
            {
              "id": 206330,
              "key": "b83b7e6a-5b91-4f8a-b09a-140590e56402",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "A **gradle task** represents a single, atomic piece of work for a build. To see a list of tasks, you can open the tasks window in Android Studio by clicking on the gradle button on the far right. Clicking on the name of the task runs that task.",
              "instructor_notes": ""
            },
            {
              "id": 206329,
              "key": "7e30e88f-4ea6-4336-a9cd-8902dbe53564",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/582a8f8e_gradletasks/gradletasks.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7e30e88f-4ea6-4336-a9cd-8902dbe53564",
              "caption": "",
              "alt": null,
              "width": 483,
              "height": 433,
              "instructor_notes": null
            },
            {
              "id": 206331,
              "key": "6876cb5c-a924-4e65-beb7-6918eae220b2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Gradle from the Command Line\n\nYou can also run gradle build tasks from the command line if you prefer. To start, you should navigate to the root of your project folder. From there you can run:\n\n```bash\n./gradlew tasks\n```\n\nThis will give you a full list of runnable tasks. You may need to run chmod +x on gradlew before you can run it. See this [link](https://developer.android.com/studio/build/index.html#buildCmd) for more detailed instructions. To learn more, you can check out [Udacity's Gradle course](https://classroom.udacity.com/courses/ud867/lessons/3968239469/concepts/42836685960923).\n\n\n## Android Debug Bridge\n\nThe other tool that Dan mentioned is **adb** which is short for Android Debug Bridge. ADB is a command line utility included with Android's SDK. You do not need to use adb for this course, but if you enjoy using the command line, you can read up on [adb](https://developer.android.com/studio/command-line/adb.html?utm_source=udacity&utm_medium=mooc&utm_term=android&utm_content=adb&utm_campaign=training) and other command line tools.\n\nWhen you type **adb** into a terminal, you'll also get a helpful list of everything adb can do for you:",
              "instructor_notes": ""
            },
            {
              "id": 206332,
              "key": "0fef7c9b-8f9f-4bdf-9782-e5e40d0229f9",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/582a9261_screen-shot-2016-11-14-at-8.42.56-pm/screen-shot-2016-11-14-at-8.42.56-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/0fef7c9b-8f9f-4bdf-9782-e5e40d0229f9",
              "caption": "",
              "alt": null,
              "width": 695,
              "height": 819,
              "instructor_notes": null
            },
            {
              "id": 206333,
              "key": "ab99fdd3-2731-4959-9c9c-c915f853a086",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "For example, to start your android app from the command line, you could type:\n\n```bash\nadb shell am start -n com.package.name/com.package.name.ActivityName\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 189160,
          "key": "200e9ec2-a5ec-4e4b-b0d9-bdc0a02d705f",
          "title": "Activities, Packages, and Layouts",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "200e9ec2-a5ec-4e4b-b0d9-bdc0a02d705f",
            "completed_at": "2020-05-11T11:11:03.986Z",
            "last_viewed_at": "2020-05-11T11:11:51.081Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 195316,
              "key": "4d112dcd-8a54-45a0-a3e8-b0613748edda",
              "title": "Activity, Package, and Layout Introduction",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "48bHFscZny8",
                "china_cdn_id": "48bHFscZny8.mp4"
              }
            },
            {
              "id": 279314,
              "key": "0acb829f-701b-4806-aef6-fa9a771c2080",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "At 3:27, Dan accidentally refers to `R.layout.activity_main` as \"R.layout.activity.main.\" He meant \"underscore,\" not \"dot,\" and is sorry for the confusion.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 189161,
          "key": "ef968f23-8b94-4670-b875-67542bb2fec2",
          "title": "Android Basics",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ef968f23-8b94-4670-b875-67542bb2fec2",
            "completed_at": "2020-05-11T11:13:03.411Z",
            "last_viewed_at": "2020-05-11T11:13:50.884Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 194643,
              "key": "baddef0c-e300-43df-9b2b-3665ccc71391",
              "title": "Android Basics (Part 1)",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "baddef0c-e300-43df-9b2b-3665ccc71391",
                "completed_at": "2020-05-11T11:13:27.544Z",
                "last_viewed_at": "2020-05-11T11:13:36.578Z",
                "unstructured": "{\"selected_id\":\"a1475263729511\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "Which Android **component** is responsible for displaying the application user interface?",
                "answers": [
                  {
                    "id": "a1475263703953",
                    "text": "Layout",
                    "is_correct": false
                  },
                  {
                    "id": "a1475263729511",
                    "text": "Activity",
                    "is_correct": true
                  },
                  {
                    "id": "a1475263734057",
                    "text": "Window",
                    "is_correct": false
                  },
                  {
                    "id": "a1478838562397",
                    "text": "Service",
                    "is_correct": false
                  },
                  {
                    "id": "a1478838570713",
                    "text": "Content Provider",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 194644,
              "key": "3b27ecca-9673-4f55-afc6-83ae2f848085",
              "title": "Android Basics (Part 2)",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3b27ecca-9673-4f55-afc6-83ae2f848085",
                "completed_at": "2020-05-11T11:13:54.727Z",
                "last_viewed_at": "2020-05-11T11:13:54.727Z",
                "unstructured": "{\"selected_id\":\"a1475263925467\",\"is_correct\":true}"
              },
              "question": {
                "prompt": "How does Android know which components are in the application?",
                "answers": [
                  {
                    "id": "a1475263905545",
                    "text": "By type",
                    "is_correct": false
                  },
                  {
                    "id": "a1475263925467",
                    "text": "The Android Manifest",
                    "is_correct": true
                  },
                  {
                    "id": "a1475263930226",
                    "text": "They are registered when Main() is called",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 205563,
          "key": "cdbfd437-de24-4903-8f01-37c29427cb38",
          "title": "Android Layouts Primer",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "cdbfd437-de24-4903-8f01-37c29427cb38",
            "completed_at": "2020-05-11T11:13:58.048Z",
            "last_viewed_at": "2020-05-11T11:14:45.564Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 205565,
              "key": "7a1f8005-eaee-4110-8feb-e2f8fdde550e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Android Layouts Primer\n\n\nYou've learned about a lot of new terms that have to do with the Android UI. Here is a quick reference of these important concepts and how they work together. If you have never worked with a language like XML or HTML before and feel confused, you should head over to the [Android Basics class on Android Layouts](https://www.udacity.com/course/android-development-for-beginners--ud837) class and take the first lesson.\n\n\n## Activities and Layouts\nAn **activity** is a single focused thing that the user can do. Activities are responsible for creating the window that your application uses to draw and receive events from the system. Activities are written in Java, extending from the Activity class.\n\nAn activity creates **views** to show the user information, and to let the user interact with the activity. Views are a class in the Android UI framework. They occupy a rectangular area on the screen and are responsible for drawing and handling events. An activity determines what views to create (and where to put them), by reading an XML layout file. These XML files, as Dan mentioned, are stored in the **res** folder inside the folder labeled **layout**.",
              "instructor_notes": ""
            },
            {
              "id": 205651,
              "key": "28f74f29-6716-4cb9-ba93-e6dfc92aa488",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/5827ad17_image02/image02.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/28f74f29-6716-4cb9-ba93-e6dfc92aa488",
              "caption": "",
              "alt": null,
              "width": 262,
              "height": 172,
              "instructor_notes": null
            },
            {
              "id": 205652,
              "key": "660ff4dd-0613-4aaa-904a-466a2359a4e8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Layout XML\n\n\nSo what does this XML look like? Here's an example:\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n   xmlns:tools=\"http://schemas.android.com/tools\"\n   android:layout_width=\"match_parent\"\n   android:layout_height=\"match_parent\"\n   android:orientation=\"vertical\"\n   android:padding=\"16dp\"\n   tools:context=\"com.example.android.exampleapp.MainActivity\">\n\n   <EditText\n       android:id=\"@+id/edit_text_name_input\"\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"wrap_content\"\n       android:background=\"@color/colorAccent\"\n       android:hint=\"Enter your name\"\n       android:padding=\"4dp\"\n       android:textSize=\"24sp\" />\n\n   <TextView\n       android:id=\"@+id/text_view_name_display\"\n       android:layout_width=\"wrap_content\"\n       android:layout_height=\"wrap_content\"\n       android:layout_gravity=\"center\"\n       android:layout_marginTop=\"8dp\"\n       android:text=\"Your name appears here\"\n       android:textSize=\"30sp\" />\n</LinearLayout>\n```\n\nThis looks like the following on a phone screen:",
              "instructor_notes": ""
            },
            {
              "id": 205653,
              "key": "b75fd400-189e-44d5-886d-45adfc3dbf83",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/5827afdd_image03/image03.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b75fd400-189e-44d5-886d-45adfc3dbf83",
              "caption": "Oops! The subtitle should read \"Your name appears here\"",
              "alt": null,
              "width": 349,
              "height": 525,
              "instructor_notes": null
            },
            {
              "id": 205654,
              "key": "fe1df604-34d3-465c-9ba8-c6c5b00bec22",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Type of View : UI Components\n\n\nThere are two major categories of views. The first type are UI components that are often interactive. Here are a few examples:\n\n\nClass Name | Description\n---|---\n[TextView](https://developer.android.com/reference/android/widget/TextView.html) | Creates text on the screen; generally non interactive text.\n[EditText](https://developer.android.com/reference/android/widget/EditText.html) | Creates a text input on the screen\n[ImageView](https://developer.android.com/reference/android/widget/ImageView.html) | Creates an image on the screen\n[Button](https://developer.android.com/reference/android/widget/Button.html) | Creates a button on the screen\n[Chronometer](https://developer.android.com/reference/android/widget/Chronometer.html) | Create a simple timer on screen\n\n\nThe [android.widget](https://developer.android.com/reference/android/widget/package-summary.html) package contains a list of *most* of the UI view classes available to you.\n\n\n## Type of View : Container View\n\n\nThe second are views called \"Layout\" or \"Container\" views. They extend from a class called [ViewGroup](https://developer.android.com/reference/android/view/ViewGroup.html). They are primarily responsible for containing a group of views and determining where they are on screen. What do I mean by \"containing a group of views?\". I mean that a view will be nested inside the tag of another view, like below:\n\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n   xmlns:tools=\"http://schemas.android.com/tools\"\n   android:layout_width=\"match_parent\"\n   android:layout_height=\"match_parent\"\n   android:orientation=\"vertical\"\n   tools:context=\"com.example.android.exampleapp.MainActivity\">\n   <TextView\n       android:layout_width=\"wrap_content\"\n       android:layout_height=\"wrap_content\"\n       android:layout_gravity=\"center\"\n       android:text=\"A\"\n       android:textSize=\"30sp\" />\n   <TextView\n       android:layout_width=\"wrap_content\"\n       android:layout_height=\"wrap_content\"\n       android:layout_gravity=\"center\"\n       android:text=\"B\"\n       android:textSize=\"30sp\" />\n   <TextView\n       android:layout_width=\"wrap_content\"\n       android:layout_height=\"wrap_content\"\n       android:layout_gravity=\"center\"\n       android:text=\"C\"\n       android:textSize=\"30sp\" />\n</LinearLayout>\n```\nThis will look like:",
              "instructor_notes": ""
            },
            {
              "id": 205649,
              "key": "20cc8df5-71d1-4998-bb4c-0044bf22cc2c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/5827aceb_image00/image00.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/20cc8df5-71d1-4998-bb4c-0044bf22cc2c",
              "caption": "",
              "alt": null,
              "width": 357,
              "height": 529,
              "instructor_notes": null
            },
            {
              "id": 205655,
              "key": "7c891d17-7f52-429a-a7ef-1139c5567bf4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "A few examples of common container views are:\n\n\nClass Name | Description\n---|---\n[LinearLayout](https://developer.android.com/reference/android/widget/LinearLayout.html) | Displays views in a single column or row.\n[RelativeLayout](https://developer.android.com/reference/android/widget/RelativeLayout.html) | Displays views positioned relative to each other and this view.\n[FrameLayout](https://developer.android.com/reference/android/widget/FrameLayout.html) | A ViewGroup meant to contain a single child view.\n[ScrollView](https://developer.android.com/reference/android/widget/ScrollView.html) | A FrameLayout that is designed to let the user scroll through the content in the view.\n[ConstraintLayout](https://developer.android.com/reference/android/support/constraint/ConstraintLayout.html) | This is a newer viewgroup; it positions views in a flexible way. We’ll be exploring constraint layout later in the lesson.\n\n\nNote that layout views can be nested in one another, so you can nest a LinearLayout inside of a LinearLayout if you so choose.\n\n\n## XML Attributes\n\n\nViews have attributes in XML which control the **properties** of the view. Here’s an example from before:\n\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n   xmlns:tools=\"http://schemas.android.com/tools\"\n   android:layout_width=\"match_parent\"\n   android:layout_height=\"match_parent\"\n   android:orientation=\"vertical\"\n   android:padding=\"16dp\"\n   tools:context=\"com.example.android.exampleapp.MainActivity\">\n\n\n   <EditText\n       android:id=\"@+id/edit_text_name_input\"\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"wrap_content\"\n       android:background=\"@color/colorAccent\"\n       android:hint=\"Enter your name\"\n       android:padding=\"4dp\"\n       android:textSize=\"24sp\" />\n\n\n   <TextView\n       android:id=\"@+id/text_view_name_display\"\n       android:layout_width=\"wrap_content\"\n       android:layout_height=\"wrap_content\"\n       android:layout_gravity=\"center\"\n       android:layout_marginTop=\"8dp\"\n       android:text=\"Your name appears here\"\n       android:textSize=\"30sp\" />\n</LinearLayout>\n```\n\n\nThe properties are things like **textSize** and **padding**. Every view has a handful of properties associated with them, which can be found on their documentation pages. These properties can be set to different values. Properties determine the specifics of how a view looks and interacts. Let's look at a few examples of properties you’ll be using shortly.\n\n\n### Text\nThe `android:text` attribute is an example of a very simple property that can be modified with the xml. In the code above, the portion that says\n\n\n```android:text=\"Your name appears here\"```\n\n\nmakes the TextView show the words:",
              "instructor_notes": ""
            },
            {
              "id": 205650,
              "key": "969597dc-d66c-448e-a643-084a13cea63e",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/5827ad06_image01/image01.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/969597dc-d66c-448e-a643-084a13cea63e",
              "caption": "",
              "alt": null,
              "width": 264,
              "height": 41,
              "instructor_notes": null
            },
            {
              "id": 205656,
              "key": "649564e2-ab9d-4d4b-a67d-61aec179555f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Width and Height\nSome of the most important properties are the width property and height property - those must be defined for every view. Remember that all views occupy a rectangular area on the screen - the width and height are the width and height of that area. You can define this in pixels, or better yet dp (stands for density-independent pixels, we’ll talk a lot more about this in later lessons):\n\n\n```xml \nandroid:layout_width=\"200dp\"\nandroid:layout_height=\"300dp\"\n```\n\n\nFor the sake of having a layout be responsive and adjust to different devices, two common values are not numbers at all, but `wrap_content` and `match_parent` used as shown here:\n\n\n```xml \nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"match_parent\"\n```\n**wrap_content** will shrink the view to wrap whatever is displayed inside the view. For example, if the view is filled with the text “Hello world” then `wrap_content` for the width will set the width of the view to be the exact width that the text “Hello world” takes up on the screen.\n\n\n**match_parent** will expand the size of the view to be as large as the parent view which it is nested inside of. \n\n\n### Padding and Margin\n\n\n`padding` and `layout_margin` are two very similar attributes. Both determine the space around a View. The difference is that `padding` determines space within the boundaries of the view, and `layout_margin` determines the space outside the boundaries of the view. For a thorough example, check out this video about [Padding and Margin](https://classroom.udacity.com/courses/ud837/lessons/4330701752/concepts/42402386170923#)\n\n## How do the XML Layouts relate to the Java Activities?\n\nAfter you create your XML Layout you need to associate it with your activity. This is done in the `onCreate` method of the `Activity` using the method `setContentView`. You pass a reference to the layout file as `R.layout.name_of_layout`. For example, if your layout were named **activity_main.xml** this would look like:\n\n\n```java\n\n\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       setContentView(R.layout.activity_main);\n       // other code to setup the activity\n    }\n    // other code\n}\n\n\n``` \nAt this point, you might have two questions, first, what is this R.layout business and second, what is setContentView actually doing?\n\n### The R Class\n\nWhen your application is compiled the [R](https://developer.android.com/reference/android/R.html) class is generated.  It creates constants that allow you to dynamically identify the various contents of the `res` folder, including layouts. To learn more, check out the documentation about [resources](https://developer.android.com/guide/topics/resources/accessing-resources.html).\n\n### setContentView\n\nSo what is the `setContentView` method doing? It **inflates the layout**. Essentially what happens is that Android reads your XML file and generates Java objects for each of the tags in your layout file. You can then edit these objects in the Java code by calling methods on the Java objects. We’ll go over what these methods look like and how to access view in your layout files later in the course.\n\n## Additional resources\n\nThis was a very quick introduction to the basics of Android layouts. You’ll be learning more about leveraging resources and responsive design in the course. If you’d like a more in-depth introduction to creating XML layouts in Android, check out the first lesson in [Android for Beginners](https://www.udacity.com/course/android-development-for-beginners--ud837).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 189162,
          "key": "01267ed4-e09e-4800-87f4-64e5745393cb",
          "title": "Exercise: Framing Favorite Toys ",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "01267ed4-e09e-4800-87f4-64e5745393cb",
            "completed_at": "2020-05-11T11:14:06.251Z",
            "last_viewed_at": "2020-05-11T11:14:53.833Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 206307,
              "key": "4c6ddadd-bbbc-4f6e-b6e9-f54cde736c7f",
              "title": "Framing Favorite Toys Exercise",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "6_HLun6vy28",
                "china_cdn_id": "6_HLun6vy28.mp4"
              }
            },
            {
              "id": 205012,
              "key": "814fdd16-ec84-4cdd-b11e-7edf49159c7c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Framing Favorite Toys\n\nDuring this exercise, you'll set up your first layout by modifying some of the boilerplate android code.\n\n### Exercise Code\n**Exercise:** [T01.01-Exercise-CreateLayout](https://github.com/udacity/ud851-Exercises/tree/student/Lesson01-Favorite-Toys/T01.01-Exercise-CreateLayout)\n\nTo open pre-existing Android code, select the **Import Project** option from the Android Studio dialog. You can close your currently open project to get back to the Android Studio starting menu. ",
              "instructor_notes": ""
            },
            {
              "id": 205449,
              "key": "97ce0015-23f3-49ad-8424-31cad0dfbd6d",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2016/November/5824dd92_screen-shot-2016-11-10-at-12.49.46-pm/screen-shot-2016-11-10-at-12.49.46-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/97ce0015-23f3-49ad-8424-31cad0dfbd6d",
              "caption": "",
              "alt": null,
              "width": 771,
              "height": 432,
              "instructor_notes": null
            },
            {
              "id": 206357,
              "key": "95156254-1fff-4d41-892c-fa22b0f1ce81",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Make sure to make use of the TODOs comments. They will guide you very explicitly through what you need to do. In this exercise, you'll be working with only two files: **app/build.gradle** (not to be confused with the build.gradle not in the app folder) and **activity_main.xml**.\n\n**activity_main.xml** is the layout file that determines what is shown in the **MainActivity.java** file. It has a `ConstraintLayout` surrounding a `TextView`. In this exercise, you'll change the `ConstraintLayout` to a `FrameLayout`. A [FrameLayout](https://developer.android.com/reference/android/widget/FrameLayout.html) is a layout that generally contains one view or overlapping views. You'll also update a bunch of **attributes** for the TextView.\n\nIn the **app/build.gradle** you simply need to delete the `ConstraintLayout` dependency.",
              "instructor_notes": ""
            },
            {
              "id": 194645,
              "key": "9095e897-d467-4eb5-86af-04668ad0f048",
              "title": "Framing FavoriteToys",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9095e897-d467-4eb5-86af-04668ad0f048",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Now it's your turn. Time to get your first, albeit slightly boring, Android layout setup.",
                "answers": [
                  {
                    "id": "a1475264083365",
                    "text": "Change the ConstraintLayout to a FrameLayout.",
                    "is_correct": true
                  },
                  {
                    "id": "a1475264121198",
                    "text": "Remove the old ConstraintLayout layout attributes.",
                    "is_correct": true
                  },
                  {
                    "id": "a1475264134506",
                    "text": "Give the TextView 16dp of padding, and set the text size to 20sp.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 189163,
          "key": "ebe17315-13a6-452b-828e-aa3de89c4c09",
          "title": "Exercise: Toying with FavoriteToys",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ebe17315-13a6-452b-828e-aa3de89c4c09",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 206315,
              "key": "fd57e305-6022-436b-a653-3d29b76ce755",
              "title": "Toying with FavoriteToys Exercise",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "z68UREeEwPA",
                "china_cdn_id": "z68UREeEwPA.mp4"
              }
            },
            {
              "id": 205013,
              "key": "d8f5772b-5c9c-4955-a157-207bda543d1f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Toying with FavoriteToys\n\nIn this exercise you'll visualize the contents of the `ToyNames` array.\n\n### Exercise Code\n**Exercise:** [T01.02-Exercise-DisplayToyList](https://github.com/udacity/ud851-Exercises/tree/student/Lesson01-Favorite-Toys/T01.02-Exercise-DisplayToyList)",
              "instructor_notes": ""
            },
            {
              "id": 195328,
              "key": "3f9a6279-2a5e-4de8-9edd-9082674afb68",
              "title": "Exercise Two: Toying with FavoriteToys",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3f9a6279-2a5e-4de8-9edd-9082674afb68",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Open Exercise 2 and complete all the TODOs. We really do want to do this in order. ",
                "answers": [
                  {
                    "id": "a1475791547474",
                    "text": "Add an ID to the TextView in the layout",
                    "is_correct": true
                  },
                  {
                    "id": "a1475791583916",
                    "text": "Find the ID for the TextView in the MainActivity.java source",
                    "is_correct": true
                  },
                  {
                    "id": "a1475791594368",
                    "text": "Append the contents of our ToyNames string array to the TextView, followed by three line separators. ",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 189164,
          "key": "8030c4d7-7819-41cb-8add-e5c5d35caf1d",
          "title": "Exercise: See More FavoriteToys",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "8030c4d7-7819-41cb-8add-e5c5d35caf1d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 206311,
              "key": "4f16a896-c08b-437f-98d7-ea53e2c13520",
              "title": "See More FavoriteToys Exercise",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "gZdwcUDVOaE",
                "china_cdn_id": "gZdwcUDVOaE.mp4"
              }
            },
            {
              "id": 205522,
              "key": "7c69f230-1af3-4b48-8a62-19aef6e590c3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# See More FavoriteToys\n\nIn this exercise, you'll add a `ScrollView` so you can see more of the toy list.\n\n### Exercise Code\n**Exercise:** [T01.03-Exercise-AddScrolling](https://github.com/udacity/ud851-Exercises/tree/student/Lesson01-Favorite-Toys/T01.03-Exercise-AddScrolling)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 195332,
              "key": "93ef2382-018e-435a-9171-89031914032b",
              "title": "Exercise Three: See More FavoriteToys",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "93ef2382-018e-435a-9171-89031914032b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Open Exercise 3 and complete all the TODOs.\n",
                "answers": [
                  {
                    "id": "a1475791879328",
                    "text": "Add a ScrollView as a child of the FrameLayout in the layout editor (using either the visual tool or XML)",
                    "is_correct": true
                  },
                  {
                    "id": "a1475791943168",
                    "text": "Set the height of the new ScrollView to wrap_content and the width to match_parent",
                    "is_correct": true
                  },
                  {
                    "id": "a1475791949749",
                    "text": "Move the existing tv_toy_names TextView inside of our ScrollView",
                    "is_correct": true
                  },
                  {
                    "id": "a1475791959784",
                    "text": "Rejoice at the lovely scrolling we get.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 189478,
          "key": "43e77b25-5212-4a18-99c4-51f20d4e27e0",
          "title": "Visual Layout Editor",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "43e77b25-5212-4a18-99c4-51f20d4e27e0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 195334,
              "key": "bb5b936a-60c8-4ab7-b486-ce56fc3dd3e6",
              "title": "Visual Layout Editor Exercise: Android Studio",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "[ConstraintLayout codelab](https://codelabs.developers.google.com/codelabs/constraint-layout)",
              "video": {
                "youtube_id": "JR5HK9IXE70",
                "china_cdn_id": "JR5HK9IXE70.mp4"
              }
            }
          ]
        },
        {
          "id": 205523,
          "key": "396af661-4041-49f8-8673-016060e99e63",
          "title": "Handling Different Screen",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "396af661-4041-49f8-8673-016060e99e63",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 205524,
              "key": "07d43cc2-4d67-411d-9efa-72ce8e13c448",
              "title": "More with the Visual Layout Editor",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "TnNNbFWq_UE",
                "china_cdn_id": "TnNNbFWq_UE.mp4"
              }
            }
          ]
        },
        {
          "id": 189479,
          "key": "dd04eecf-2931-4fdc-9522-79ea7d6e1ee2",
          "title": "Responsive Design",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dd04eecf-2931-4fdc-9522-79ea7d6e1ee2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 206371,
              "key": "8a97d2e3-a133-405c-9ba6-0bcf67b3d1b4",
              "title": "Responsive Design",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ENGV-KPs5ns",
                "china_cdn_id": "ENGV-KPs5ns.mp4"
              }
            }
          ]
        },
        {
          "id": 189480,
          "key": "6717feea-da32-4dba-aa05-ae487e579124",
          "title": "Layout Managers",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6717feea-da32-4dba-aa05-ae487e579124",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 206308,
              "key": "22c3f2cf-333d-42f0-b3dd-5af653ad6928",
              "title": "Layout Managers",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "EAyOlmSuDbY",
                "china_cdn_id": "EAyOlmSuDbY.mp4"
              }
            }
          ]
        },
        {
          "id": 189481,
          "key": "42960413-c083-4f92-b000-ceb9bd90ae3b",
          "title": "Exercise: Update Sunshine Layout",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "42960413-c083-4f92-b000-ceb9bd90ae3b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 205030,
              "key": "ba2ff8ec-bd7e-46b4-8276-99ce0a81520d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Update Sunshine Layout\n\nNow that you've explored creating simple layouts in the FavoriteToys app, it's time to start working on our main app for the course, Sunshine. If you haven't already, you can download the Sunshine code [here](https://github.com/udacity/ud851-Sunshine/archive/student.zip) or view the GitHub repo [here](https://github.com/udacity/ud851-Sunshine). During this exercise, you'll set up Sunshine's layout by modifying the boilerplate android code.\n\n### Exercise Code\n**Exercise:** [S01.01-Exercise-CreateLayout](https://github.com/udacity/ud851-Sunshine/tree/student/S01.01-Exercise-CreateLayout)",
              "instructor_notes": ""
            },
            {
              "id": 196085,
              "key": "53878d2d-45f0-46a0-b3f0-f864f1bef977",
              "title": "Sunshine: Exercise One",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "53878d2d-45f0-46a0-b3f0-f864f1bef977",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "It's time to create some Sunshine.   ",
                "answers": [
                  {
                    "id": "a1476213857996",
                    "text": "Open the project for the first exercise: [S01.01-Exercise-CreateLayout]",
                    "is_correct": true
                  },
                  {
                    "id": "a1476213897943",
                    "text": "Change the ConstraintLayout to a FrameLayout since we're not using any of ConstraintLayout’s special features.",
                    "is_correct": true
                  },
                  {
                    "id": "a1476213901914",
                    "text": "Add a ScrollView around the TextView.  ",
                    "is_correct": true
                  },
                  {
                    "id": "a1476213955813",
                    "text": "Follow the TODOs in the TODO manager",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 205031,
          "key": "7d7924eb-af09-46fd-b98e-8867e2711ddd",
          "title": "Solution: Update Sunshine Layout",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7d7924eb-af09-46fd-b98e-8867e2711ddd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 205034,
              "key": "60a1950b-e46d-4eeb-88fe-5eb985f8bc6a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Update Sunshine Layout Solution\n\nIn this step, you modified some of the boiler plate code to create a new layout for Sunshine\n\n## Notes on Solution Code\nMost of this step involved massaging the layout code to contain just a simple `FrameLayout` with a `ScrollView`, as seen below:\n\n```xml\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    <ScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n        <TextView\n            android:id=\"@+id/tv_weather_data\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"16dp\"\n            android:textSize=\"20sp\" />\n    </ScrollView>\n</FrameLayout>\n```\n\nAfter removing the `ConstraintLayout` from your code, it was also safe to remove this dependency:\n\n```\nimplementation 'com.android.support.constraint:constraint-layout:1.1.3'\n```\n\n\n\n### Solution Code\n**Solution:** [[S01.01-Solution-CreateLayout](https://github.com/udacity/ud851-Sunshine/tree/student/S01.01-Solution-CreateLayout)][[Diff](https://github.com/udacity/ud851-Sunshine/compare/S01.01-Exercise-CreateLayout...S01.01-Solution-CreateLayout)]",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 189482,
          "key": "0bfb8489-0571-455f-aab4-2f54bf60e83c",
          "title": "Exercise: Add Scrolling Weather",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0bfb8489-0571-455f-aab4-2f54bf60e83c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 196086,
              "key": "1ac4eced-e1b8-43ca-804c-83d2d34adc21",
              "title": "Sunshine: Exercise Two",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "vwTO4mYOb-8",
                "china_cdn_id": "vwTO4mYOb-8.mp4"
              }
            },
            {
              "id": 205525,
              "key": "b19756e9-d93b-442b-a035-47f2ec45fdca",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Add Scrolling Weather Exercise\n\nTime to make Sunshine contain a scrolling list of weather forecasts. In this exercise, you'll display some dummy weather data in a `ScrollView`.\n\n### Exercise Code\n**Exercise:** [S01.02-Exercise-AddWeatherList](https://github.com/udacity/ud851-Sunshine/tree/student/S01.02-Exercise-AddWeatherList)\n",
              "instructor_notes": ""
            },
            {
              "id": 196088,
              "key": "dfa4d15f-3504-45e8-977e-50ccd21a3a4d",
              "title": "Sunshine: Exercise Two",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "dfa4d15f-3504-45e8-977e-50ccd21a3a4d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Begin by opening the second exercise project in Android Studio and then follow the TODOs to complete the steps below.",
                "answers": [
                  {
                    "id": "a1476214095384",
                    "text": "Add the ID to the TextView in the layout",
                    "is_correct": true
                  },
                  {
                    "id": "a1476214114092",
                    "text": "Create a member variable for the TextView and find it in onCreate",
                    "is_correct": true
                  },
                  {
                    "id": "a1476214126771",
                    "text": "Append the weather strings and line separators to the TextView",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 205526,
          "key": "53fd81ab-b668-4b2b-9e6d-db64ba3392a5",
          "title": "Solution: Add Scrolling Weather",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "53fd81ab-b668-4b2b-9e6d-db64ba3392a5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 205527,
              "key": "fd2d9ce9-0f03-4564-9de0-abe27b8c321e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Add Scrolling Weather Solution\n\nIn this exercise, you added a list of scrolling weather data.\n\nPerhaps the trickiest part of this exercise was using `findViewById`. `findViewById` does exactly as the name implies: It gets a view from your XML layout by its ID, and stores it for you in a Java object, like this:\n\n```java\n mWeatherTextView = (TextView) findViewById(R.id.tv_weather_data);\n```\n\nOnce you have this view, you can add everything in your weather array using the <a href=\"https://developer.android.com/reference/android/widget/TextView.html#append(java.lang.CharSequence)\" target=\"_blank\">append</a> method of the `TextView` class. \n\nAnother method you can use is <a href=\"https://developer.android.com/reference/android/widget/TextView.html#setText(int)\" target=\"_blank\">setText</a>. The difference between `setText` and `append` is that `setText` overwrites what was in the `TextView`, while `append` simply adds text onto whatever text was already there. For the solution code and a full diff showing the before and after states, check out the links below.\n\n### Solution Code\n**Solution:** [[S01.02-Solution-AddWeatherList](https://github.com/udacity/ud851-Sunshine/tree/student/S01.02-Solution-AddWeatherList)][[Diff](https://github.com/udacity/ud851-Sunshine/compare/S01.02-Exercise-AddWeatherList...S01.02-Solution-AddWeatherList)]",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 189483,
          "key": "cc0832ae-6545-44e0-82e8-c0ca73be274f",
          "title": "Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "cc0832ae-6545-44e0-82e8-c0ca73be274f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 195337,
              "key": "ecac1f24-62af-4fe4-b4ea-5481ad44b007",
              "title": "Recap",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "dJSkTtHB5fU",
                "china_cdn_id": "dJSkTtHB5fU.mp4"
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}